<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RobotMapper">
<select id="robotStatuslistAll" parameterType="pd" resultType="pd">
		SELECT
		    pt.id as id,
			pt.steam_pid AS pid,
			pt.steam_oid AS oid,
			pt.steam_uid AS uid,
			pt.`status` AS `status`,
			pt.bots_steam_uid AS botsSteamUid,
			pt.last_updated AS updateTime
		FROM
			product_trade pt
		WHERE
			pt.`status` = #{status}
		AND pt.last_updated &lt; #{updateTime}
	</select>
	<select id="botIdlistAll" parameterType="pd" resultType="pd">
		SELECT
			pt.bots_steam_uid AS botsSteamUid
		FROM
			product_trade pt
		WHERE
			pt.`status` IN (0,1,2,6)
		group by pt.bots_steam_uid
	</select>
	<select id="botOidlistAll" parameterType="java.util.List" resultType="pd">
		SELECT
		    pt.id as ptid,
		    pt.steam_oid as oid,
		    pt.steam_pid as pid, 
			pt.bots_steam_uid AS botsSteamUid
		FROM
			product_trade pt
		WHERE
		    pt.`status` in(1,2,3,5)
		    and pt.last_updated &lt; DATE_SUB(now(),INTERVAL 1 HOUR)
		    and pt.bots_steam_uid = #{robotId} 
	</select>	
		<select id="botOidlistAllOne" parameterType="pd" resultType="pd">
		SELECT
		    pt.id as ptid,
		    pt.steam_oid as oid,
		    pt.steam_pid as pid,
		    pt.status as pstatus,
			pt.bots_steam_uid AS botsSteamUid
		FROM
			product_trade pt
		WHERE
		   <!--  pt.`status` in (1,2,3,5) -->
		    pt.steam_pid = #{pid}
	</select>
	<select id="productTradelistAll" parameterType="pd" resultType="pd">
		SELECT
		    pt.id as id,
			pt.steam_pid AS pid,
			pt.steam_oid AS oid,
			pt.steam_uid AS uid,
			pt.`status` AS `status`,
			pt.bots_steam_uid AS botsSteamUid,
			pt.last_updated AS updateTime
		FROM
			product_trade pt
		WHERE
			pt.`status` in(1,2)	
			and pt.bots_steam_uid=#{botsSteamUid}	
		order by pt.last_updated desc
	</select>
	<select id="comparelistPage" parameterType="page" resultType="pd">
		SELECT
		    pt.id as id,
			pt.steam_pid AS pid,
			pt.steam_oid AS oid,
			pt.steam_uid AS uid,
			pt.`status` AS `status`,
			pt.bots_steam_uid AS botsSteamUid,
			pt.last_updated AS updateTime
		FROM
			robot_compare  pt
		WHERE
			pt.`status` in(1,2)
		<if test="pd.steamId!=null and pd.steamId!=''">
		    and pt.bots_steam_uid = #{pd.steamId}
		</if>			
		order by pt.last_updated desc
	</select>
	<insert id="saveCompareResult" parameterType="java.util.List" flushCache="false">
			INSERT INTO `robot_compare` (
				`steam_pid`,
				`steam_oid`,
				`steam_uid`,
				`status`,
				`bots_steam_uid`,
				`last_updated`
			)
			VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
					#{item.pid},
					#{item.oid},
					#{item.uid},
					#{item.status},
					#{item.botsSteamUid},
					#{item.updateTime}
				)
            </foreach>
	</insert>
	<insert id="saveProductTrade_bak" parameterType="java.util.List" flushCache="false">
			INSERT INTO `robot_compare_auto` (
			    `ptid`,
				`steam_oid`,
				`status`,
				`bots_steam_uid`,
				`last_updated`,
				`robot_id`,
				`update_id`,
				`steam_pid`,
				 mark_hash_name,
				 icon_url
			)
			VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
				<if test="item.ptid!=null">
					#{item.ptid},
				</if>
				<if test="item.ptid==null">
					0,
				</if>	
				<if test="item.oid!=null">
					#{item.oid},
				</if>
				<if test="item.oid==null">
					0,
				</if>
				
				<if test="item.status!=null">
					#{item.status},
				</if>
				<if test="item.status==null">
					0,
				</if>
				
				<if test="item.botsSteamUid!=null">
					#{item.botsSteamUid},
				</if>
				<if test="item.botsSteamUid==null">
					0,
				</if>
				
					#{item.updateTime},
				
				<if test="item.robotId!=null">
					#{item.robotId},
				</if>
				<if test="item.robotId==null">
					0,
				</if>
					
				<if test="item.updateId!=null">
					#{item.updateId},
				</if>
				<if test="item.updateId==null">
					0,
				</if>
				<if test="item.pid!=null">
					#{item.pid},
				</if>
				<if test="item.pid==null">
					0,
				</if>
				<if test="item.markHashName!=null">
					#{item.markHashName},
				</if>
				<if test="item.markHashName==null">
					0,
				</if>
				<if test="item.iconUrl!=null">
					#{item.iconUrl}
				</if>
				<if test="item.iconUrl==null">
					0
				</if>
				)
            </foreach>
	</insert>				
	<update id="updateTradeStatus" parameterType="pd">
		update product_trade pt set `status` = #{status} ,pt.last_updated=#{updateTime}
		where id = #{id}
	</update>	
	
	<delete id="deleteRobotPag">
	    delete  from robot_compare
	</delete>
	<delete id="deleteProductTrade_bak">
	    delete  from robot_compare_auto
	</delete>
	<delete id="deleteReportFormOne1" parameterType="pd">
		DELETE from report1_notype_form  where DATE_FORMAT(data_anliyze_time,'%Y-%m-%d') = #{data_anliyze_time1}
	</delete>
	<delete id="deleteReportFormOne2" parameterType="pd">
		DELETE from report1_type_form  where DATE_FORMAT(data_anliyze_time,'%Y-%m-%d') = #{data_anliyze_time1}
	</delete>
	<delete id="deleteReportFormTwo" parameterType="pd">
		DELETE from report12_all_product_hour_form  where data_anliyze_time = #{day_anlyze_start}
	</delete>
	<delete id="deleteReportFormThree" parameterType="pd">
		DELETE from report3_self_product_day_form  where data_anliyze_time = #{day_anlyze_start}
	</delete>
	<delete id="deleteReportFormFour" parameterType="pd">
		DELETE from report4_self_product_day_form  where data_anliyze_time = #{day_anlyze_start}
	</delete>
	<delete id="deleteReportFormFive" parameterType="pd">
		DELETE from report5_order_pay_day_form  where data_anliyze_time = #{day_anlyze_start}
	</delete>
	<delete id="deleteReportFormSix" parameterType="pd">
		DELETE from report6_user_day_form  where data_anlyze_time = #{day_anlyze_start}
	</delete>
	<delete id="deleteReportFormSeven" parameterType="pd">
		DELETE from report7_seller_day_form  where data_anlyz_time = #{day_anlyze_start1}
	</delete>
	<delete id="deleteReportFormEight" parameterType="pd">
		DELETE from report8_buyuser_day_form  where data_anlyz_time = #{day_anlyze_start}
	</delete>
	<select id="queryReportFormOne1" parameterType="pd" resultType="pd">
		SELECT
			order_success_num as one,
			product_sale_num as two,
			order_price_total as three,
		  	a.date_anlyze_time as four,
			NOW() as five,
			IFNULL(adjustOrderNum,0) as six,
			IFNULL(adjustOrderPrice,0) as seven,
			(order_success_num-IFNULL(adjustOrderNum,0)) as eight,
			(order_price_total+IFNULL(adjustOrderPrice,0)) as nine,
			a.app_id as ten,
			CASE a.app_id
				WHEN 730 THEN
					'csgo'
				WHEN 570 THEN
					'dota2'
				WHEN 433850 THEN
					'h1z1:KotK'
				WHEN 295110 THEN
					'h1z1:js'	
				END AS eleven
			
		FROM
			(
				SELECT
					count(1) AS order_success_num,
					time1 AS date_anlyze_time,
					seller_steam_uid,
					app_id
				FROM
					(
						SELECT
							COUNT(o.order_number),
							DATE_FORMAT(
								o.date_modified,
								'%Y-%m-%d %H'
							) AS time1,
							o.seller_steam_uid,
							o.app_id
						FROM
							`order` o
						WHERE
							o.`status` = 1
						AND o.payment_method not in(5,7)
						AND o.date_modified >= #{day_anlyze_start}
						AND o.date_modified &lt; #{day_anlyze_stop}
						GROUP BY
							DATE_FORMAT(
								o.date_modified,
								'%Y-%m-%d %H'
							),
							o.order_number,o.app_id
					) x
				GROUP BY
					date_anlyze_time,app_id
			) a
		LEFT JOIN (
			SELECT
				count(1) AS product_sale_num,
				o.app_id,
				DATE_FORMAT(
					o.date_modified,
					'%Y-%m-%d %H'
				) AS time1
			FROM
				`order` o
			WHERE
				o.`status` = 1
				AND o.payment_method not in(5,7)
			AND o.date_modified >= #{day_anlyze_start}
			AND o.date_modified &lt; #{day_anlyze_stop}
			GROUP BY
				DATE_FORMAT(
					o.date_modified,
					'%Y-%m-%d %H'
				),o.app_id
		) b ON a.date_anlyze_time = b.time1 and a.app_id=b.app_id
		LEFT JOIN (
			SELECT
				sum(o.order_total) AS order_price_total,
				o.app_id,
				DATE_FORMAT(
					o.date_modified,
					'%Y-%m-%d %H'
				) AS time1
			FROM
				`order` o
			WHERE
				o.`status` = 1
			AND o.payment_method not in(5,7)
			AND o.date_modified >= #{day_anlyze_start}
			AND o.date_modified &lt; #{day_anlyze_stop}
			GROUP BY
				DATE_FORMAT(
					o.date_modified,
					'%Y-%m-%d %H'
				),o.app_id
		) c ON b.time1 = c.time1 and b.app_id =c.app_id
		LEFT JOIN(
			SELECT
				DATE_FORMAT(
					o.date_modified,
					'%Y-%m-%d %H'
				) AS time1,
				o.app_id,
			SUM(
				CAST(
					o.actual_paid AS DECIMAL (10, 2)
				)
			) AS adjustOrderPrice,
			count(1) AS adjustOrderNum
		FROM
			`order` o
		WHERE
			o.`status` = 3
			AND o.payment_method not in(5,7)
			AND o.date_modified >= #{day_anlyze_start}
			AND o.date_modified &lt; #{day_anlyze_stop}
		GROUP BY
			DATE_FORMAT(
				o.date_modified,
				'%Y-%m-%d %H'
			),o.app_id
		)d on c.time1 = d.time1 and c.app_id=d.app_id
		ORDER BY
			a.date_anlyze_time DESC
	</select>
	<insert id="insertReportFormOne1" parameterType="java.util.List">
	INSERT into report1_notype_form(order_success_num,product_sale_num,order_price_total,data_anliyze_time,create_time,adjust_order_num,adjust_order_price,effective_order_num,effective_order_price,game_type,game_name)
				VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
					<if test="item.one!=null">
					#{item.one},
				</if>
				<if test="item.one==null">
					0,
				</if>
				<if test="item.two!=null">
					#{item.two},
				</if>
				<if test="item.two==null">
					0,
				</if>
				<if test="item.three!=null">
					#{item.three},
				</if>
				<if test="item.three==null">
					0,
				</if>
				<if test="item.four!=null">
					#{item.four},
				</if>
				<if test="item.four==null">
					0,
				</if>
				<if test="item.five!=null">
					#{item.five},
				</if>
				<if test="item.five==null">
					0,
				</if>
				<if test="item.six!=null">
					#{item.six},
				</if>
				<if test="item.six==null">
					0,
				</if>
				<if test="item.seven!=null">
					#{item.seven},
				</if>
				<if test="item.seven==null">
					0,
				</if>
				<if test="item.eight!=null">
					#{item.eight},
				</if>
				<if test="item.eight==null">
					0,
				</if>
				<if test="item.nine!=null">
					#{item.nine},
				</if>
				<if test="item.nine==null">
					0,
				</if>
				<if test="item.ten!=null">
					#{item.ten},
				</if>
				<if test="item.ten==null">
					0,
				</if>
				<if test="item.eleven!=null">
					#{item.eleven}
				</if>
				<if test="item.eleven==null">
					0
				</if>
				)
            </foreach>
	</insert>
		
	<select id="queryReportFormOne2" parameterType="pd" resultType="pd">
		SELECT
			a.user_type as one,
		  a.user_type_name as two ,
      IFNULL(a.avgPrice,0) as three,
      IFNULL(a.totalProductSale,0) as four,
      IFNULL(a.totalPrice,0) as five,
			a.date_anliyze as six,
      NOW() as seven,
		  IFNULL(b.retNum,0) as eight,
			IFNULL(b.totalRetPrice,0) as nine,
			a.gameType as ten,
			a.gameName as eleven
		FROM
			(
				SELECT
					DATE_FORMAT(
						o.date_modified,
						'%Y-%m-%d %H'
					) AS date_anliyze,
		      su.user_type,
					CASE su.user_type
				WHEN 1 THEN
					'普通用户'
				WHEN 2 THEN
					'普通机器人'
				WHEN 3 THEN
					'vip账户'
				WHEN 4 THEN
					'自营账号'
				WHEN 5 THEN
					'奖品机器人帐户'
				WHEN 6 THEN
					'大卖家'
				END AS user_type_name,
				o.app_id as gameType,
				CASE o.app_id
				WHEN 730 THEN
					'csgo'
				WHEN 570 THEN
					'dota2'
				WHEN 433850 THEN
					'h1z1:KotK'
				WHEN 295110 THEN
					'h1z1:js'	
				END AS gameName,
				SUM(
					CAST(
						o.order_total AS DECIMAL (10, 2)
					)
				) AS totalPrice,
				SUM(o.amount) AS totalProductSale,
				CAST(
					SUM(
						CAST(
							o.order_total AS DECIMAL (10, 2)
						)
					) / SUM(o.amount) AS DECIMAL (10, 2)
				) AS avgPrice
			FROM
				`order` o
			LEFT JOIN steam_user su ON o.seller_steam_uid = su.steam_uid
			WHERE
				o.`status` = 1
			AND su.user_type!=0
			AND o.payment_method not in(5,7)
			GROUP BY
				DATE_FORMAT(
					o.date_modified,
					'%Y-%m-%d %H'
				),
				su.user_type,o.app_id
			) a
		LEFT  JOIN (
			SELECT
				DATE_FORMAT(
					o.date_modified,
					'%Y-%m-%d %H'
				) AS date_anliyze,
				CASE su.user_type
			WHEN 1 THEN
				'普通用户'
			WHEN 2 THEN
				'普通机器人'
			WHEN 3 THEN
				'vip账户'
			WHEN 4 THEN
				'自营账号'
			WHEN 5 THEN
				'奖品机器人帐户'
			WHEN 6 THEN
				'大卖家'
			END AS user_type_name,
      su.user_type,
      o.app_id as gameType,
      CASE o.app_id
      WHEN 730 THEN
		'csgo'
	 WHEN 570 THEN
		'dota2'
	WHEN 433850 THEN
		'h1z1:KotK'
	WHEN 295110 THEN
		'h1z1:js'	
	 END AS gameName,
			SUM(
				CAST(
					o.actual_paid AS DECIMAL (10, 2)
				)
			) AS totalRetPrice,
			count(1) AS retNum
		FROM
			`order` o
		LEFT JOIN steam_user su ON o.seller_steam_uid = su.steam_uid
		WHERE
			o.`status` = 3
		AND o.payment_method not in(5,7)
		AND su.user_type!=0
		GROUP BY
			DATE_FORMAT(
				o.date_modified,
				'%Y-%m-%d %H'
			),
			su.user_type,o.app_id
		) b ON a.date_anliyze = b.date_anliyze
		AND a.user_type = b.user_type and a.gameType=b.gameType
    where STR_TO_DATE(a.date_anliyze,'%Y-%m-%d')=#{dateString}
		ORDER BY
			a.date_anliyze DESC	
	</select>
	<insert id="insertReportFormOne2" parameterType="java.util.List">
		INSERT into report1_type_form(seller_type,seller_type_name,product_sale_num,order_price_total,data_anliyze_time,create_time,avg_price,ret_num,ret_price,game_type,game_name)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
				<if test="item.one!=null">
					#{item.one},
				</if>
				<if test="item.one==null">
					0,
				</if>
				<if test="item.two!=null">
					#{item.two},
				</if>
				<if test="item.two==null">
					'0',
				</if>
				<if test="item.four!=null">
					#{item.four},
				</if>
				<if test="item.four==null">
					0,
				</if>
				<if test="item.five!=null">
					#{item.five},
				</if>
				<if test="item.five==null">
					0,
				</if>
				<if test="item.six!=null">
					#{item.six},
				</if>
				<if test="item.six==null">
					0,
				</if>
				<if test="item.seven!=null">
					#{item.seven},
				</if>
				<if test="item.seven==null">
					0,
				</if>
				<if test="item.three!=null">
					#{item.three},
				</if>
				<if test="item.three==null">
					0,
				</if>
				<if test="item.eight!=null">
					#{item.eight},
				</if>
				<if test="item.eight==null">
					0,
				</if>
				<if test="item.nine!=null">
					#{item.nine},
				</if>
				<if test="item.nine==null">
					0,
				</if>
				<if test="item.ten!=null">
					#{item.ten},
				</if>
				<if test="item.ten==null">
					0,
				</if>
				<if test="item.eleven!=null">
					#{item.eleven}
				</if>
				<if test="item.eleven==null">
					0
				</if>										
				)
            </foreach>
	</insert>
	
	
	<select id="queryReportFormTwo" parameterType="pd" resultType="pd">
		SELECT
			su.steam_uid AS one,
			su.user_type AS two,
			CASE su.user_type
		WHEN 1 THEN
			'普通用户'
		WHEN 2 THEN
			'普通机器人'
		WHEN 3 THEN
			'vip账户'
		WHEN 4 THEN
			'自营账号'
		WHEN 5 THEN
			'奖品机器人帐户'
		WHEN 6 THEN
			'大卖家'
		END AS three,
		 pc.id AS four,
		 pc.`name` AS five,
		 pte.id AS six,
		 pte.`name` AS seven,
		(SELECT COUNT(o.order_number) from `order` o1 
		where o1.`status`=1 
		and o1.payment_method not in(5,7)
		and o1.date_modified>=#{day_anlyze_start} 
		and o1.date_modified &lt; #{day_anlyze_stop} and o1.id=o.id GROUP BY o1.order_number) AS eight,
     count(su.steam_uid) AS nine,
		 sum(o.order_total) AS ten,
		 sum(o.order_total) / count(su.steam_uid) AS eleven,
     #{day_anlyze_start} as  twelve,
      NOW() as  thirteen,
      pt.app_id as fourteen,
      CASE pt.app_id
		WHEN 730 THEN
			'csgo'
		WHEN 570 THEN
			'dota2'
		WHEN 433850 THEN
			'h1z1:KotK'
		WHEN 295110 THEN
			'h1z1:js'	
		END AS fifteen
		FROM
			steam_user su
		LEFT JOIN `order` o ON su.steam_uid = o.seller_steam_uid
		LEFT JOIN product_trade pt ON o.order_object_id = pt.id
		RIGHT JOIN product p ON pt.product_id = p.id
		LEFT JOIN product_category pc ON pc.id = p.product_category_id
		LEFT JOIN product_type pte ON pte.id = p.product_type_id
		WHERE
			o.`status` = 1
		AND pc.is_enable = 1
		AND o.payment_method not in(5,7)
		AND o.date_modified BETWEEN #{day_anlyze_start}
		AND #{day_anlyze_stop}
		GROUP BY
			su.steam_uid,
			pc.id,
			pt.app_id,
			pte.id
	</select>
	<insert id="insertReportFormTwo" parameterType="java.util.List">
		INSERT into report12_all_product_hour_form(seller_user_steam_id,seller_type,seller_type_name,product_type,product_type_name,weapon_type,weapon_type_name,order_success_num,product_sale_num,order_price_total,user_single_price,data_anliyze_time,create_time,game_type,game_name)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
					<if test="item.one!=null">
					#{item.one},
				</if>
				<if test="item.one==null">
					'0',
				</if>
				<if test="item.two!=null">
					#{item.two},
				</if>
				<if test="item.two==null">
					0,
				</if>
				<if test="item.three!=null">
					#{item.three},
				</if>
				<if test="item.three==null">
					'0',
				</if>
				<if test="item.four!=null">
					#{item.four},
				</if>
				<if test="item.four==null">
					0,
				</if>
				<if test="item.five!=null">
					#{item.five},
				</if>
				<if test="item.five==null">
					'0',
				</if>
				<if test="item.six!=null">
					#{item.six},
				</if>
				<if test="item.six==null">
					0,
				</if>
				<if test="item.seven!=null">
					#{item.seven},
				</if>
				<if test="item.seven==null">
					'0',
				</if>
				<if test="item.eight!=null">
					#{item.eight},
				</if>
				<if test="item.eight==null">
					0,
				</if>
				<if test="item.nine!=null">
					#{item.nine},
				</if>
				<if test="item.nine==null">
					0,
				</if>
				<if test="item.ten!=null">
					#{item.ten},
				</if>
				<if test="item.ten==null">
					0,
				</if>
				<if test="item.eleven!=null">
					#{item.eleven},
				</if>
				<if test="item.eleven==null">
					0,
				</if>
				<if test="item.twelve!=null">
					#{item.twelve},
				</if>
				<if test="item.twelve==null">
					0,
				</if>
				<if test="item.thirteen!=null">
					#{item.thirteen},
				</if>
				<if test="item.thirteen==null">
					0,
				</if>
				<if test="item.fourteen!=null">
					#{item.fourteen},
				</if>
				<if test="item.fourteen==null">
					0,
				</if>
				<if test="item.fifteen!=null">
					#{item.fifteen}
				</if>
				<if test="item.fifteen==null">
					0
				</if>
				)
            </foreach>
	</insert>
	
	<select id="queryReportFormThree" parameterType="pd" resultType="pd">
SELECT
		m.time as one,
		m.categoryName as two,
		m.upOnTotalNum as three,
		m.upOnTotalMoney as four,
		m.saleTotalNum as five,
		m.saleTotalMoney as six,
		IFNULL(n.totalMoney,0) as seven,
		NOW() as eight
		FROM
		(SELECT
		IFNULL(b.categoryName,c.categoryName) as categoryName,
		IFNULL(b.num,0) as upOnTotalNum,
		IFNULL(b.totalMoney,0) as upOnTotalMoney,
		IFNULL(b.time,c.time) as time,
		IFNULL(c.num,0) as saleTotalNum,
		IFNULL(c.totalMoney,0) as saleTotalMoney,
		IFNULL(c.time ,b.time) as time1
		FROM
			(SELECT
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') as time,
			pc.`name` as categoryName,
			count(pc.`name`) as num,
			sum(pt.purchase_price) as totalMoney
			from
			product_trade pt,steam_user su,product p,product_category pc
			where pt.steam_uid=su.steam_uid and pt.product_id=p.id and p.product_category_id = pc.id
			and su.user_type=4
			and pt.`status` in (1,2,3,7,8,10,60,61,62,63)
			and p.product_type_id !=-1
			and pc.is_enable = 1
			and pt.app_id=730
			and pt.date_created >= #{day_anlyze_start} and pt.date_created &lt; #{day_anlyze_stop}
			GROUP BY
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') desc,
			pc.`name`)b 
				LEFT JOIN
			(select 
			DATE_FORMAT(pct.time,'%Y-%m-%d') as time,
			count(pct.pteId) as num,
			sum(pct.price) as totalMoney,
			pct.category as categoryName
		 	from
			  
		  	(select pte.id AS pteId,pc.name AS category,pte.purchase_price as price,pte.last_updated as time
		 		from  product_trade pte,product p,product_category pc,steam_user su
		 			where pte.steam_uid=su.steam_uid and pte.product_id=p.id and p.product_category_id = pc.id and pte.app_id=730
					and pte.last_updated>=#{day_anlyze_start} and pte.last_updated &lt; #{day_anlyze_stop} and status in (10,8,62) and su.user_type=4 and pte.date_created not in('2016-11-09 10:40:34','2016-11-11 11:40:34')
					)pct
			GROUP BY
			DATE_FORMAT(pct.time,'%Y-%m-%d') desc,
			pct.category)c 
			on b.time=c.time
			and b.categoryName=c.categoryName
	UNION
			SELECT
		IFNULL(b.categoryName,c.categoryName) as categoryName,
		IFNULL(b.num,0) as upOnTotalNum,
		IFNULL(b.totalMoney,0) as upOnTotalMoney,
		IFNULL(b.time,c.time) as time,
		IFNULL(c.num,0) as saleTotalNum,
		IFNULL(c.totalMoney,0) as saleTotalMoney,
		IFNULL(c.time ,b.time) as time1
		FROM
			(SELECT
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') as time,
			pc.`name` as categoryName,
			count(pc.`name`) as num,
			sum(pt.purchase_price) as totalMoney
			from
			product_trade pt,steam_user su,product p,product_category pc
			where pt.steam_uid=su.steam_uid and pt.product_id=p.id and p.product_category_id = pc.id
			and su.user_type=4
			and pt.`status` in (1,2,3,7,8,10,60,61,62,63)
			and p.product_type_id !=-1
			and pc.is_enable = 1
			and pt.app_id=730
			and pt.date_created >= #{day_anlyze_start} and pt.date_created &lt; #{day_anlyze_stop}
			GROUP BY
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') desc,
			pc.`name`)b 
				RIGHT JOIN
			(select 
			DATE_FORMAT(pct.time,'%Y-%m-%d') as time,
			count(pct.pteId) as num,
			sum(pct.price) as totalMoney,
			pct.category as categoryName
		 	from
			  
		  	(select pte.id AS pteId,pc.name AS category,pte.purchase_price as price,pte.last_updated as time
		 		from  product_trade pte,product p,product_category pc,steam_user su
		 			where pte.steam_uid=su.steam_uid and pte.product_id=p.id and p.product_category_id = pc.id and pte.app_id=730
					and pte.last_updated>=#{day_anlyze_start} and pte.last_updated &lt; #{day_anlyze_stop} and status in (10,8,62) and su.user_type=4 and pte.date_created not in('2016-11-09 10:40:34','2016-11-11 11:40:34')
					)pct
			GROUP BY
			DATE_FORMAT(pct.time,'%Y-%m-%d') desc,
			pct.category)c 
			on b.time=c.time
			and b.categoryName=c.categoryName
		)m
	LEFT JOIN
	(
		SELECT
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') as time,
			pc.`name` as categoryName,
			count(pc.`name`) as num,
			sum(pt.purchase_price) as totalMoney
			from
			product_trade pt,steam_user su,product p,product_category pc
			where pt.steam_uid=su.steam_uid and pt.product_id=p.id and p.product_category_id = pc.id
			and su.user_type=4
			and pt.`status` in (1,2,3,5,6,9)
			and pc.is_enable = 1
			and pt.app_id=730
			and pt.date_created >= #{day_anlyze_start} and pt.date_created &lt; #{day_anlyze_stop}
			GROUP BY
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') desc,
			pc.`name`
	)n on m.time = n.time and m.categoryName=n.categoryName
	ORDER BY
	m.time desc,m.categoryName
	
	</select>	
	<insert id="insertReportFormThree" parameterType="java.util.List">
		INSERT into report3_self_product_day_form(data_anliyze_time,category_name,upOnTotalNum,upOnTotalMoney,saleTotalNum,saleTotalMoney,inventoryMoney,create_time)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
					<if test="item.one!=null">
					#{item.one},
				</if>
				<if test="item.one==null">
					0,
				</if>
				<if test="item.two!=null">
					#{item.two},
				</if>
				<if test="item.two==null">
					'0',
				</if>
				<if test="item.three!=null">
					#{item.three},
				</if>
				<if test="item.three==null">
					0,
				</if>
				<if test="item.four!=null">
					#{item.four},
				</if>
				<if test="item.four==null">
					0,
				</if>
				<if test="item.five!=null">
					#{item.five},
				</if>
				<if test="item.five==null">
					0,
				</if>
				<if test="item.six!=null">
					#{item.six},
				</if>
				<if test="item.six==null">
					0,
				</if>
				<if test="item.seven!=null">
					#{item.seven},
				</if>
				<if test="item.seven==null">
					0,
				</if>
				<if test="item.eight!=null">
					#{item.eight}
				</if>
				<if test="item.eight==null">
					0
				</if>
				)
            </foreach>
	</insert>
<!-- 把大卖家，vip，普通用户合成普通用户 -->
<select id="queryReportFormFour" parameterType="pd" resultType="pd">
SELECT
	m.time as one,
	m.userType as two,
	m.pcId as three,
	m.categoryName as four,
	m.ptyId as five,
	m.typeName as six,
	m.upOnTotalNum as seven,
	m.saleTotalNum as eight,
	(m.upOnTotalNum-m.saleTotalNum) as nine,
	(saleTotalNum/upOnTotalNum) as ten,
	NOW() as eleven,
	m.gameType as twelve,
	m.gameName as thirteen
	FROM	
	(SELECT
			IFNULL(b.time,c.time) as time,
			IFNULL(b.userType,c.userType) as userType,
			IFNULL(b.pcId,c.pcId) as pcId,
			IFNULL(b.categoryName,c.categoryName) as categoryName,
			IFNULL(b.ptyId,c.ptyId) as ptyId,
			IFNULL(b.typeName,c.typeName) as typeName,
			IFNULL(b.num,0) as upOnTotalNum,
			IFNULL(c.num,0) as saleTotalNum,
			IFNULL(b.gameType,c.gameType) as gameType,
			IFNULL(b.gameName,c.gameName) as gameName
		FROM
			(SELECT
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') as time,
			1 as userType,
			pc.id as pcId,
			pc.`name` as categoryName,
			pty.id as ptyId,
			pty.title as typeName,
			pt.app_id as gameType,
			CASE pt.app_id
			WHEN 730 THEN
			'csgo'
			WHEN 570 THEN
			'dota2'
			WHEN 433850 THEN
			'h1z1:KotK'
		    WHEN 295110 THEN
			'h1z1:js'
			END AS gameName,
			count(pc.`name`) as num
			from
			product_trade pt
			left join 
			steam_user su on  pt.steam_uid=su.steam_uid
			left join 
			product p on pt.product_id=p.id
			left join 
			product_category pc on p.product_category_id=pc.id
			left join 
			product_type pty on p.product_type_id=pty.id
			where su.user_type in (1,3,6)
			AND pt.`status` in(1,2,3,7,8,10,60,61,62,63)
			and pc.is_enable = 1
			and pt.date_created >= #{day_anlyze_start} and pt.date_created &lt; #{day_anlyze_stop}
			GROUP BY
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') desc,
			pc.`name`,pty.`name`,pt.app_id
			union 	
			SELECT
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') as time,
			4 as userType,
			pc.id as pcId,
			pc.`name` as categoryName,
			pty.id as ptyId,
			pty.title as typeName,
			pt.app_id as gameType,
			CASE pt.app_id
			WHEN 730 THEN
			'csgo'
			WHEN 570 THEN
			'dota2'
			WHEN 433850 THEN
			'h1z1:KotK'
		    WHEN 295110 THEN
			'h1z1:js'
			END AS gameName,
			count(pc.`name`) as num
			from
			product_trade pt
			left join 
			steam_user su on  pt.steam_uid=su.steam_uid
			left join 
			product p on pt.product_id=p.id
			left join 
			product_category pc on p.product_category_id=pc.id
			left join 
			product_type pty on p.product_type_id=pty.id
			where su.user_type in (4)
			AND pt.`status` in(1,2,3,7,8,10,60,61,62,63)
			and pc.is_enable = 1
			and pt.date_created >= #{day_anlyze_start} and pt.date_created &lt; #{day_anlyze_stop}
			GROUP BY
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') desc,
			pc.`name`,pty.`name`,pt.app_id
			)b 
			LEFT JOIN
			(SELECT
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			1 as userType,
			pc.id as pcId,
			pc.`name` as categoryName,
			pty.id as ptyId,
			pty.title as typeName,
			pt.app_id as gameType,
			CASE pt.app_id
			WHEN 730 THEN
			'csgo'
			WHEN 570 THEN
			'dota2'
		    WHEN 433850 THEN
			'h1z1:KotK'
		    WHEN 295110 THEN
			'h1z1:js'
			END AS gameName,
			count(pc.`name`) as num
			from
			product_trade pt
			left join 
			steam_user su on  pt.steam_uid=su.steam_uid
			left join 
			product p on pt.product_id=p.id
			left join 
			product_category pc on p.product_category_id=pc.id
			left join 
			product_type pty on p.product_type_id=pty.id
			where su.user_type in (1,3,6)
			and pt.`status` in (10,8,62)
			and pc.is_enable = 1
			and pt.last_updated >= #{day_anlyze_start} and pt.last_updated &lt; #{day_anlyze_stop} and pt.date_created not in('2016-11-09 10:40:34','2016-11-11 11:40:34')
			GROUP BY
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') desc,
			pc.`name`,pty.`name`,pt.app_id	
			union
			SELECT
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			4 as userType,
			pc.id as pcId,
			pc.`name` as categoryName,
			pty.id as ptyId,
			pty.title as typeName,
			pt.app_id as gameType,
			CASE pt.app_id
			WHEN 730 THEN
			'csgo'
			WHEN 570 THEN
			'dota2'
			WHEN 433850 THEN
			'h1z1:KotK'
		    WHEN 295110 THEN
			'h1z1:js'
			END AS gameName,
			count(pc.`name`) as num
			from
			product_trade pt
			left join 
			steam_user su on  pt.steam_uid=su.steam_uid
			left join 
			product p on pt.product_id=p.id
			left join 
			product_category pc on p.product_category_id=pc.id
			left join 
			product_type pty on p.product_type_id=pty.id
			where su.user_type in (4)
			and pt.`status` in (10,8,62)
			and pc.is_enable = 1
			and pt.last_updated >= #{day_anlyze_start} and pt.last_updated &lt; #{day_anlyze_stop} and pt.date_created not in('2016-11-09 10:40:34','2016-11-11 11:40:34')
			GROUP BY
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') desc,
			pc.`name`,pty.`name`,pt.app_id
			)c 
			on b.time=c.time
			and b.userType=c.userType
			and b.categoryName=c.categoryName
			and b.typeName=c.typeName
			and b.gameType=c.gameType
		UNION
		SELECT
			IFNULL(b.time,c.time) as time,
			IFNULL(b.userType,c.userType) as userType,
			IFNULL(b.pcId,c.pcId) as pcId,
			IFNULL(b.categoryName,c.categoryName) as categoryName,
			IFNULL(b.ptyId,c.ptyId) as ptyId,
			IFNULL(b.typeName,c.typeName) as typeName,
			IFNULL(b.num,0) as upOnTotalNum,
			IFNULL(c.num,0) as saleTotalNum,
			IFNULL(b.gameType,c.gameType) as gameType,
			IFNULL(b.gameName,c.gameName) as gameName
		FROM
			(SELECT
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') as time,
			1 as userType,
			pc.id as pcId,
			pc.`name` as categoryName,
			pty.id as ptyId,
			pty.title as typeName,
			pt.app_id as gameType,
			CASE pt.app_id
			WHEN 730 THEN
			'csgo'
			WHEN 570 THEN
			'dota2'
			WHEN 433850 THEN
			'h1z1:KotK'
		    WHEN 295110 THEN
			'h1z1:js'
			END AS gameName,
			count(pc.`name`) as num
			from
			product_trade pt
			left join 
			steam_user su on  pt.steam_uid=su.steam_uid
			left join 
			product p on pt.product_id=p.id
			left join 
			product_category pc on p.product_category_id=pc.id
			left join 
			product_type pty on p.product_type_id=pty.id
			where su.user_type in (1,3,6)
			AND pt.`status` in(1,2,3,7,8,10,60,61,62,63)
			and pc.is_enable = 1
			and pt.date_created >= #{day_anlyze_start} and pt.date_created &lt; #{day_anlyze_stop}
			GROUP BY
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') desc,
			pc.`name`,pty.`name`,pt.app_id
			 union 	 
			 SELECT
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') as time,
			4 as userType,
			pc.id as pcId,
			pc.`name` as categoryName,
			pty.id as ptyId,
			pty.title as typeName,
			pt.app_id as gameType,
			CASE pt.app_id
			WHEN 730 THEN
			'csgo'
			WHEN 570 THEN
			'dota2'
			WHEN 433850 THEN
			'h1z1:KotK'
		    WHEN 295110 THEN
			'h1z1:js'
			END AS gameName,
			count(pc.`name`) as num
			from
			product_trade pt
			left join 
			steam_user su on  pt.steam_uid=su.steam_uid
			left join 
			product p on pt.product_id=p.id
			left join 
			product_category pc on p.product_category_id=pc.id
			left join 
			product_type pty on p.product_type_id=pty.id
			where su.user_type in (4)
			AND pt.`status` in(1,2,3,7,8,10,60,61,62,63)
			and pc.is_enable = 1
			and pt.date_created >= #{day_anlyze_start} and pt.date_created &lt; #{day_anlyze_stop} and pt.date_created not in('2016-11-09 10:40:34','2016-11-11 11:40:34')
			GROUP BY
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') desc,
			pc.`name`,pty.`name`,pt.app_id
			)b 
			RIGHT JOIN
			(SELECT
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			1 as userType,
			pc.id as pcId,
			pc.`name` as categoryName,
			pty.id as ptyId,
			pty.title as typeName,
			pt.app_id as gameType,
			CASE pt.app_id
			WHEN 730 THEN
			'csgo'
			WHEN 570 THEN
			'dota2'
			WHEN 433850 THEN
			'h1z1:KotK'
		    WHEN 295110 THEN
			'h1z1:js'
			END AS gameName,
			count(pc.`name`) as num
			from
			product_trade pt
			left join 
			steam_user su on  pt.steam_uid=su.steam_uid
			left join 
			product p on pt.product_id=p.id
			left join 
			product_category pc on p.product_category_id=pc.id
			left join 
			product_type pty on p.product_type_id=pty.id
			where su.user_type in (1,3,6)
			and pt.`status` in (10,8,62)
			and pc.is_enable = 1
			and pt.last_updated >= #{day_anlyze_start} and pt.last_updated &lt; #{day_anlyze_stop} and pt.date_created not in('2016-11-09 10:40:34','2016-11-11 11:40:34')
			GROUP BY
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') desc,
			pc.`name`,pty.`name`,pt.app_id	
			union 	
			SELECT
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			4 as userType,
			pc.id as pcId,
			pc.`name` as categoryName,
			pty.id as ptyId,
			pty.title as typeName,
			pt.app_id as gameType,
			CASE pt.app_id
			WHEN 730 THEN
			'csgo'
			WHEN 570 THEN
			'dota2'
			WHEN 433850 THEN
			'h1z1:KotK'
		    WHEN 295110 THEN
			'h1z1:js'
			END AS gameName,
			count(pc.`name`) as num
			from
			product_trade pt
			left join 
			steam_user su on  pt.steam_uid=su.steam_uid
			left join 
			product p on pt.product_id=p.id
			left join 
			product_category pc on p.product_category_id=pc.id
			left join 
			product_type pty on p.product_type_id=pty.id
			where su.user_type in (4)
			and pt.`status` in (10,8,62)
			and pc.is_enable = 1
			and pt.last_updated >= #{day_anlyze_start} and pt.last_updated &lt; #{day_anlyze_stop} and pt.date_created not in('2016-11-09 10:40:34','2016-11-11 11:40:34')
			GROUP BY
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') desc,
			pc.`name`,pty.`name`,pt.app_id
			)c 
			on b.time=c.time
			and b.userType=c.userType
			and b.categoryName=c.categoryName
			and b.typeName=c.typeName
			and b.gameType=c.gameType)m
where m.time!='0000-00-00' ORDER BY m.time desc
	</select>
	<insert id="insertReportFormFour" parameterType="java.util.List">
	
	INSERT into report4_self_product_day_form(data_anliyze_time,seller_type,category_id,category_name,type_id,type_name,product_uped_total,
	product_sale_total,product_uping_total,dynamic_sales_rate,create_time,game_type,game_name)
				VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
					<if test="item.one!=null">
					#{item.one},
				</if>
				<if test="item.one==null">
					0,
				</if>
				<if test="item.two!=null">
					#{item.two},
				</if>
				<if test="item.two==null">
					'0',
				</if>
				<if test="item.three!=null">
					#{item.three},
				</if>
				<if test="item.three==null">
					0,
				</if>
				<if test="item.four!=null">
					#{item.four},
				</if>
				<if test="item.four==null">
					'0',
				</if>
				<if test="item.five!=null">
					#{item.five},
				</if>
				<if test="item.five==null">
					0,
				</if>
				<if test="item.six!=null">
					#{item.six},
				</if>
				<if test="item.six==null">
					'0',
				</if>
				<if test="item.seven!=null">
					#{item.seven},
				</if>
				<if test="item.seven==null">
					0,
				</if>
				<if test="item.eight!=null">
					#{item.eight},
				</if>
				<if test="item.eight==null">
					0,
				</if>
				<if test="item.nine!=null">
					#{item.nine},
				</if>
				<if test="item.nine==null">
					0,
				</if>
				<if test="item.ten!=null">
					#{item.ten},
				</if>
				<if test="item.ten==null">
					0,
				</if>
				<if test="item.eleven!=null">
					#{item.eleven},
				</if>
				<if test="item.eleven==null">
					0,
				</if>
				<if test="item.twelve!=null">
					#{item.twelve},
				</if>
				<if test="item.twelve==null">
					0,
				</if>
				<if test="item.thirteen!=null">
					#{item.thirteen}
				</if>
				<if test="item.thirteen==null">
					0
				</if>
				)
            </foreach>
	</insert>
	
	<select id="queryReportFormFive" parameterType="pd" resultType="pd">
		<!-- SELECT
			a.payment_method as one,
			a.pay_method_name as two,
			a.order_num_total as three,
			b.order_num_success as four,
			(
				b.order_num_success / a.order_num_total
			) AS five,
		  #{day_anlyze_start} as six,
			NOW() AS seven
		FROM
			(
				SELECT
					o.payment_method,
					CASE o.payment_method
				WHEN 1 THEN
					'支付宝'
				WHEN 2 THEN
					'银联'
				END AS pay_method_name,
				COUNT(1) AS order_num_total
			FROM
				`order` o
			WHERE
				o.date_created BETWEEN #{day_anlyze_start}
			AND #{day_anlyze_stop}
			GROUP BY
				o.payment_method
			) a,
			(
			SELECT 
				COUNT(m.order_num_success) as order_num_success,
				m.payment_method as payment_method
			from
			(
				SELECT
					oo.payment_method as payment_method,
					COUNT(oo.order_number) AS order_num_success,
					DATE_FORMAT(oo.date_created,'%Y-%m-%d') as time1
				FROM
					`order` oo
				WHERE
					oo.`status` = 1
				AND oo.date_created BETWEEN #{day_anlyze_start}
				AND #{day_anlyze_stop}
				GROUP BY
					oo.payment_method,oo.order_number,DATE_FORMAT(oo.date_created,'%Y-%m-%d')
			) m
				GROUP BY
				m.time1
			)b
		WHERE
			a.payment_method = b.payment_method -->
			
			
			SELECT
			a.payment_method as one,
			a.pay_method_name as two,
			a.order_num_total as three,
			b.order_num_success as four,
			(
				b.order_num_success / a.order_num_total
			) AS five,
		  #{day_anlyze_start} as six,
			NOW() AS seven
		FROM
			(
				SELECT
					o.channel as payment_method,
					CASE o.channel
				WHEN 1 THEN
					'支付宝'
				WHEN 2 THEN
					'银联'
				WHEN 4 THEN
					'微信'
				WHEN 6 THEN
					'比特币'
				WHEN 7 THEN
					'PAYPAL'
				WHEN 20 THEN
					'未指定'
				END AS pay_method_name,
				COUNT(1) AS order_num_total
			FROM
				deposit_cash o
			WHERE
				o.created BETWEEN #{day_anlyze_start}
			AND #{day_anlyze_stop}
			GROUP BY
				o.channel
			) a,
			(
			SELECT 
				COUNT(m.order_num_success) as order_num_success,
				m.payment_method as payment_method
			from
			(
				SELECT
					oo.channel as payment_method,
					COUNT(oo.id) AS order_num_success,
					DATE_FORMAT(oo.created,'%Y-%m-%d') as time1
				FROM
					deposit_cash oo
				WHERE
					oo.`status` in (5,6)
				AND oo.created BETWEEN #{day_anlyze_start}
				AND #{day_anlyze_stop}
				GROUP BY
					oo.channel,oo.id,DATE_FORMAT(oo.created,'%Y-%m-%d')
			) m
				GROUP BY
				m.time1
			)b
		WHERE
			a.payment_method = b.payment_method
			
		
	</select>	
	<insert id="insertReportFormFive" parameterType="java.util.List">
		INSERT into report5_order_pay_day_form(pay_method,pay_method_name,order_num_total,order_num_success,success_rate,data_anliyze_time, create_time)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
					<if test="item.one!=null">
					#{item.one},
				</if>
				<if test="item.one==null">
					0,
				</if>
				<if test="item.two!=null">
					#{item.two},
				</if>
				<if test="item.two==null">
					'0',
				</if>
				<if test="item.three!=null">
					#{item.three},
				</if>
				<if test="item.three==null">
					0,
				</if>
				<if test="item.four!=null">
					#{item.four},
				</if>
				<if test="item.four==null">
					0,
				</if>
				<if test="item.five!=null">
					#{item.five},
				</if>
				<if test="item.five==null">
					0,
				</if>
				<if test="item.six!=null">
					#{item.six},
				</if>
				<if test="item.six==null">
					0,
				</if>
				<if test="item.seven!=null">
					#{item.seven}
				</if>
				<if test="item.seven==null">
					0
				</if>
				)
            </foreach>
	</insert>
	
	<select id="queryReportFormSix" parameterType="pd" resultType="pd">
		<!-- SELECT
			COUNT(*) AS one,
				(
				SELECT
					count(1)
				FROM
					(
						SELECT
							count(1) AS a
						FROM
							steam_user su
						WHERE
							su.date_joined BETWEEN #{day_anlyze_start}
						AND #{day_anlyze_stop}
						GROUP BY
							su.date_joined,su.steam_uid
					) b
			) AS two,
			(
				SELECT
					count(1)
				FROM
					(
						SELECT
							count(1) AS a
						FROM
							`order` o
						WHERE
							o.date_created BETWEEN #{day_anlyze_start}
						AND #{day_anlyze_stop}
						GROUP BY
							o.buyer_steam_uid
					) b
			) AS three,
			(
				SELECT
					COUNT(1)
				FROM
					(
						SELECT
							count(1) AS a
						FROM
							product_trade pt
						WHERE
							pt.date_created BETWEEN #{day_anlyze_start}
						AND #{day_anlyze_stop}
						GROUP BY
							pt.steam_uid
					) b
			) AS four,
		  #{day_anlyze_start} as five,
		  NOW() as six
		FROM
			steam_user su
		WHERE
			su.last_login BETWEEN #{day_anlyze_start}
		AND #{day_anlyze_stop} -->
		
		select a.one ,b.two,c.three,d.four, #{day_anlyze_start} as five,
		  NOW() as six from 

		(select DATE_FORMAT(
					date_created,
					'%Y-%m-%d'
				) AS time, count(DISTINCT user_id) as one from user_login_log where date_created>=#{day_anlyze_start} and date_created &lt; #{day_anlyze_stop} ) a 

		left join 
	(SELECT DATE_FORMAT(
					date_joined,
					'%Y-%m-%d'
				) AS time,
							count(steam_uid) AS two
						FROM
							steam_user su
						WHERE
							su.date_joined >=#{day_anlyze_start}
						AND date_joined &lt; #{day_anlyze_stop}) b on a.time=b.time
				left join 
	(select  DATE_FORMAT(
					created,
					'%Y-%m-%d'
				) AS time,count(DISTINCT from_wallet_id) as three from all_cash_flow 
where confirm_type=5 and created >=#{day_anlyze_start} and created &lt; #{day_anlyze_stop}) c on a.time=c.time

		left join 
			(SELECT DATE_FORMAT(
					date_created,
					'%Y-%m-%d'
				) AS time,
							count(DISTINCT steam_uid) AS four
						FROM
							product_trade pt
						WHERE
							pt.status!=0
							and pt.date_created >=#{day_anlyze_start}
						AND pt.date_created &lt; #{day_anlyze_stop}) d on a.time=d.time 
						
		
	</select>	
	<insert id="insertReportFormSix" parameterType="java.util.List">
		INSERT into report6_user_day_form(login_num,first_login_num,buy_user_num,up_product_user_num,data_anlyze_time,create_time)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
					<if test="item.one!=null">
					#{item.one},
				</if>
				<if test="item.one==null">
					0,
				</if>
				<if test="item.two!=null">
					#{item.two},
				</if>
				<if test="item.two==null">
					0,
				</if>
				<if test="item.three!=null">
					#{item.three},
				</if>
				<if test="item.three==null">
					0,
				</if>
				<if test="item.four!=null">
					#{item.four},
				</if>
				<if test="item.four==null">
					0,
				</if>
				<if test="item.five!=null">
					#{item.five},
				</if>
				<if test="item.five==null">
					0,
				</if>
				<if test="item.six!=null">
					#{item.six}
				</if>
				<if test="item.six==null">
					0
				</if>

				)
            </foreach>
	</insert>	
	
<select id="queryReportFormSeven" parameterType="pd" resultType="pd">	
	SELECT
	m.seller_steam_id AS one,
	m.seller_steam_name AS two,
	m.email AS three,
	m.phone AS four,
	IFNULL(a.put_on_number,0)+IFNULL((SELECT rf.put_on_number AS putnum  FROM report7_seller_day_form rf WHERE rf.seller_steam_id = m.seller_steam_id and rf.game_type=m.app_id and DATE_FORMAT(rf.data_anlyz_time,'%Y-%m-%d') &lt;#{dateString} order by data_anlyz_time desc limit 0,1),0)  AS eight,
	IFNULL(e.currentsale,0)+IFNULL((SELECT rf.number_of_sold AS salenum  FROM report7_seller_day_form rf WHERE rf.seller_steam_id = m.seller_steam_id and rf.game_type=m.app_id and DATE_FORMAT(rf.data_anlyz_time,'%Y-%m-%d') &lt;#{dateString} order by data_anlyz_time desc limit 0,1),0)  AS nine,
	IFNULL(e.currentunitprice,0)+CAST(IFNULL((SELECT rf.sale_amount AS saleamount  FROM report7_seller_day_form rf WHERE rf.seller_steam_id = m.seller_steam_id and rf.game_type=m.app_id and DATE_FORMAT(rf.data_anlyz_time,'%Y-%m-%d') &lt;#{dateString} order by data_anlyz_time desc limit 0,1),0) AS DECIMAL(10,2)) AS ten,
	(select CAST(IFNULL(r.count_balance_money,0)AS DECIMAL(10,2)) from report14_wallet_form r where r.steam_uid=m.seller_steam_id and DATE_FORMAT(r.anlyze_data,'%Y-%m-%d') &lt;=#{dateString} order by r.anlyze_data desc limit 0,1 ) as eleven,
	#{day_anlyze_start1} as twelve,
	NOW() as thirteen,
	m.app_id as fourteen,
	CASE m.app_id
		WHEN 730 THEN
			'csgo'
		WHEN 570 THEN
			'dota2'
		WHEN 433850 THEN
			'h1z1:KotK'
		WHEN 295110 THEN
			'h1z1:js'
		END AS fifteen,
	IFNULL(e.currentsale,0) as sixteen,
	IFNULL(e.currentunitprice,0) as seventeen
	FROM
(
	SELECT
			DISTINCT pt.steam_uid AS seller_steam_id,
			su.personaname AS seller_steam_name,
			su.email AS email,
			su.phone AS phone,
			pt.app_id
				FROM
					product_trade pt
				LEFT JOIN steam_user su ON pt.steam_uid = su.steam_uid
				WHERE
					pt.date_created >=#{day_anlyze_start1}
				AND pt.date_created &lt;=#{day_anlyze_stop}
				AND su.user_type in (1,3,6)
				AND su.is_active=1
				AND su.is_block =0
				AND pt.`status` in(1,2,3)
union 
	SELECT
			DISTINCT pt.steam_uid AS seller_steam_id,
			su.personaname AS seller_steam_name,
			su.email AS email,
			su.phone AS phone,
			pt.app_id
				FROM
					product_trade pt
				LEFT JOIN steam_user su ON pt.steam_uid = su.steam_uid
				WHERE
					pt.last_updated >=#{day_anlyze_start1}
				AND pt.last_updated &lt;=#{day_anlyze_stop}
				AND su.user_type in (1,3,6)
				AND su.is_active=1
				AND su.is_block =0
				AND pt.`status`=10
) m left join 
	(	
		SELECT
			pt.steam_uid AS seller_steam_id,
			pt.app_id,
				COUNT(pt.steam_uid) AS put_on_number
				FROM
					product_trade pt
				LEFT JOIN steam_user su ON pt.steam_uid = su.steam_uid
				WHERE
					pt.date_created >=#{day_anlyze_start1}
				AND pt.date_created &lt;=#{day_anlyze_stop}
				AND su.user_type in (1,3,6)
				AND su.is_active=1
				AND su.is_block =0
				AND pt.`status` in(1,2,3,10)
				GROUP BY pt.steam_uid,pt.app_id) a on m.seller_steam_id=a.seller_steam_id and m.app_id=a.app_id
	LEFT JOIN 
	(
	SELECT 
		pt1.steam_uid,
		pt1.app_id,
		IFNULL(COUNT(pt1.steam_uid),0) AS currentsale,
		IFNULL(SUM(pt1.unit_price),0) AS currentunitprice
		FROM product_trade pt1
		WHERE pt1.`status`=10
		and pt1.last_updated >=#{day_anlyze_start1}
		AND pt1.last_updated &lt;=#{day_anlyze_stop}
		GROUP BY pt1.steam_uid,pt1.app_id	
	) e ON m.seller_steam_id =e.steam_uid and m.app_id=e.app_id limit ${offset},${limit};
	
	</select>
	
	<select id="queryReportFormSevenTotal" parameterType="pd" resultType="pd">
		SELECT 
		DATE_FORMAT(r.data_anlyz_time,'%Y-%m-%d') AS otime,
		r.seller_steam_id AS steamid,
		CAST(IFNULL(r.put_on_number,0)AS DECIMAL(10,2)) AS put_on_number,
		CAST(IFNULL(r.number_of_sold,0)AS DECIMAL(10,2)) AS number_of_sold,
		CAST(IFNULL(r.sale_amount,0)AS DECIMAL(10,2)) AS sale_amount
		FROM report7_seller_day_form r 
    	where r.seller_steam_id=#{one} and r.game_type=${fourteen}
		and data_anlyz_time=(select max(data_anlyz_time) from report7_seller_day_form where seller_steam_id=#{one} and game_type=${fourteen})
	</select>
	
	<insert id="insertReportFormSeven" parameterType="java.util.List">
		INSERT into report7_seller_day_form(seller_steam_id,seller_steam_name,email,phone,number_of_storage,put_on_number,number_of_sold,sale_amount,withdraw_cash_total,data_anlyz_time,create_time,game_type,game_name,current_sale,current_price)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
<if test="item.one!=null">
					#{item.one},
				</if>
				<if test="item.one==null">
					'0',
				</if>
				<if test="item.two!=null">
					#{item.two},
				</if>
				<if test="item.two==null">
					'0',
				</if>
				<if test="item.three!=null">
					#{item.three},
				</if>
				<if test="item.three==null">
					'0',
				</if>
				<if test="item.four!=null">
					#{item.four},
				</if>
				<if test="item.four==null">
					'0',
				</if>
				<if test="item.seven!=null">
					#{item.seven},
				</if>
				<if test="item.seven==null">
					0,
				</if>
				<if test="item.eight!=null">
					#{item.eight},
				</if>
				<if test="item.eight==null">
					0,
				</if>
				<if test="item.nine!=null">
					#{item.nine},
				</if>
				<if test="item.nine==null">
					0,
				</if>
				<if test="item.ten!=null">
					#{item.ten},
				</if>
				<if test="item.ten==null">
					0,
				</if>
				<if test="item.eleven!=null">
					#{item.eleven},
				</if>
				<if test="item.eleven==null">
					0,
				</if>
				<if test="item.twelve!=null">
					#{item.twelve},
				</if>
				<if test="item.twelve==null">
					0,
				</if>
				<if test="item.thirteen!=null">
					#{item.thirteen},
				</if>
				<if test="item.thirteen==null">
					0,
				</if>
				<if test="item.fourteen!=null">
					#{item.fourteen},
				</if>
				<if test="item.fourteen==null">
					0,
				</if>
				<if test="item.fifteen!=null">
					#{item.fifteen},
				</if>
				<if test="item.fifteen==null">
					0,
				</if>
				<if test="item.sixteen!=null">
					#{item.sixteen},
				</if>
				<if test="item.sixteen==null">
					0,
				</if>
				<if test="item.seventeen!=null">
					#{item.seventeen}
				</if>
				<if test="item.seventeen==null">
					0
				</if>
				)
            </foreach>
	</insert>	
	
	<select id="queryReportFormEight" parameterType="pd" resultType="pd">
		SELECT
			a.buyer_steam_id as one,
			a.buyer_steam_name as two,
			a.email as three,
			a.phone as four,
			a.contact_type as five,
			a.contact_content as six,
			a.buy_product_num as seven,
		  a.consum_price_total as eight,
		  a.consum_single_price as nine,
		  a.latest_consum_time as ten,
		  b.consum_rate_per_week as eleven,
		  c.consum_rate_per_month as twelve,
		  IFNULL(d.fail_product_num,0) as seventeen,
		  IFNULL(e.stay_product_num,0) as eighteen,
		  #{day_anlyze_start} as thirteen,
		  NOW() as fourteen,
		  a.app_id as fifteen,
		  CASE a.app_id
		WHEN 730 THEN
			'csgo'
		WHEN 570 THEN
			'dota2'
		WHEN 433850 THEN
			'h1z1:KotK'
		WHEN 295110 THEN
			'h1z1:js'
		END AS sixteen
		  
		FROM
			(
				SELECT
					su.steam_uid AS buyer_steam_id,
					su.personaname AS buyer_steam_name,
					su.email AS email,
					su.phone AS phone,
					o.app_id,
					IFNULL(o.other_contacts_type, 0) AS contact_type,
					IFNULL(
						CONCAT(
							CASE IFNULL(o.other_contacts_type, 0)
							WHEN 0 THEN
								'未知'
							WHEN 1 THEN
								'QQ'
							WHEN 2 THEN
								'微信'
							END,
							o.other_contacts
						),
						''
					) AS contact_content,
					COUNT(1) AS buy_product_num,
					SUM(o.order_total) AS consum_price_total,
					SUM(o.order_total) / COUNT(1) AS consum_single_price,
					MAX(o.date_modified) AS latest_consum_time
				FROM
					`order` o
				LEFT JOIN steam_user su ON o.buyer_steam_uid = su.steam_uid
				WHERE
					o.`status` = 1
				AND o.date_modified BETWEEN #{day_anlyze_start}
				AND #{day_anlyze_stop}
				GROUP BY
					o.buyer_steam_uid,o.app_id
			) a
		LEFT JOIN (
			select o.buyer_steam_uid,o.app_id,count(1) as fail_product_num from `order` o
			where o.`status` = 2 AND o.date_modified BETWEEN #{day_anlyze_start}
				AND #{day_anlyze_stop}
				GROUP BY
					o.buyer_steam_uid,o.app_id
		)d on a.buyer_steam_id =d.buyer_steam_uid and a.app_id=d.app_id
		
		LEFT JOIN (
			select o.buyer_steam_uid,o.app_id,count(1) as stay_product_num from `order` o
			where o.`status` = 0 AND o.date_modified BETWEEN #{day_anlyze_start}
				AND #{day_anlyze_stop}
				GROUP BY
					o.buyer_steam_uid,o.app_id
		)e on a.buyer_steam_id =e.buyer_steam_uid and a.app_id=e.app_id
		
		LEFT JOIN (
			SELECT
				o.buyer_steam_uid,
				o.app_id,
				COUNT(1) AS consum_rate_per_week
			FROM
				`order` o
			LEFT JOIN steam_user su ON o.buyer_steam_uid = su.steam_uid
			WHERE
				o.`status` = 1
			AND o.date_modified BETWEEN #{week_start}
			AND #{day_anlyze_stop}
			GROUP BY
				o.buyer_steam_uid,o.app_id
		) b ON a.buyer_steam_id = b.buyer_steam_uid and a.app_id=b.app_id
		LEFT JOIN (
			SELECT
				o.buyer_steam_uid,
				o.app_id,
				COUNT(1) AS consum_rate_per_month
			FROM
				`order` o
			LEFT JOIN steam_user su ON o.buyer_steam_uid = su.steam_uid
			WHERE
				o.`status` = 1
			AND o.date_modified BETWEEN #{month_start}
			AND #{day_anlyze_stop}
			
			GROUP BY
				o.buyer_steam_uid,o.app_id
		) c ON a.buyer_steam_id = c.buyer_steam_uid and a.app_id=c.app_id limit ${offset},${limit}
		
	</select>
	<insert id="insertReportFormEight" parameterType="java.util.List">
		INSERT into report8_buyuser_day_form(buyer_steam_id,buyer_steam_name,email,phone,contact_type,contact_content,buy_product_num,consum_price_total,consum_single_price,latest_consum_time,consum_rate_per_week,consum_rate_per_month,data_anlyz_time,create_time,game_type,game_name,fail_product_num,stay_product_num)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
				<if test="item.one!=null">
					#{item.one},
				</if>
				<if test="item.one==null">
					'0',
				</if>
				<if test="item.two!=null">
					#{item.two},
				</if>
				<if test="item.two==null">
					'0',
				</if>
				<if test="item.three!=null">
					#{item.three},
				</if>
				<if test="item.three==null">
					'0',
				</if>
				<if test="item.four!=null">
					#{item.four},
				</if>
				<if test="item.four==null">
					'0',
				</if>
				<if test="item.five!=null">
					#{item.five},
				</if>
				<if test="item.five==null">
					0,
				</if>
				<if test="item.six!=null">
					#{item.six},
				</if>
				<if test="item.six==null">
					'0',
				</if>
				<if test="item.seven!=null">
					#{item.seven},
				</if>
				<if test="item.seven==null">
					0,
				</if>
				<if test="item.eight!=null">
					#{item.eight},
				</if>
				<if test="item.eight==null">
					0,
				</if>
				<if test="item.nine!=null">
					#{item.nine},
				</if>
				<if test="item.nine==null">
					0,
				</if>
				<if test="item.ten!=null">
					#{item.ten},
				</if>
				<if test="item.ten==null">
					0,
				</if>
				<if test="item.eleven!=null">
					#{item.eleven},
				</if>
				<if test="item.eleven==null">
					0,
				</if>
				<if test="item.twelve!=null">
					#{item.twelve},
				</if>
				<if test="item.twelve==null">
					0,
				</if>
				<if test="item.thirteen!=null">
					#{item.thirteen},
				</if>
				<if test="item.thirteen==null">
					0,
				</if>
				<if test="item.fourteen!=null">
					#{item.fourteen},
				</if>
				<if test="item.fourteen==null">
					0,
				</if>
				<if test="item.fifteen!=null">
					#{item.fifteen},
				</if>
				<if test="item.fifteen==null">
					0,
				</if>
				<if test="item.sixteen!=null">
					#{item.sixteen},
				</if>
				<if test="item.sixteen==null">
					0,
				</if>
				<if test="item.seventeen!=null">
					#{item.seventeen},
				</if>
				<if test="item.seventeen==null">
					0,
				</if>
				<if test="item.eighteen!=null">
					#{item.eighteen}
				</if>
				<if test="item.eighteen==null">
					0
				</if>
				)
            </foreach>
	</insert>	
<!-- 	<insert id="insertReportFormNineTen" parameterType="pd">
		INSERT into report910_withdraw_day_form(steam_uid,income_amount,withdraw_amount,not_withdraw_amount,cash_rate,cash_amount,pay_success_amount,pay_success_rate,data_anliyz_time,create_time)
		(
		SELECT
			a.seller_steam_uid,
			#订单成功的收入金额
			a.income_amount,
			#提现成功金额
			IFNULL(b.pay_success_amount, 0) AS withdraw_amount,
			#未提现=提现申请-提现成功
			IFNULL(
				(
					a.income_amount - b.pay_success_amount
				),
				0
			) AS not_withdraw_amount,
			IFNULL(
				(
					b.pay_success_amount / a.income_amount
				),
				0
			) AS cash_rate,
			#提现申请总金额
			a.withdraw_amount AS cash_amount,
			IFNULL(b.pay_success_amount, 0) AS pay_success_amount,
			#打款成功率
			IFNULL(
				(
					b.pay_success_amount / a.withdraw_amount
				),
				0
			) AS pay_success_rate,
		 #{day_anlyze_start},
		 NOW() as create_time
		FROM
			(
				SELECT
					o.seller_steam_uid,
					SUM(o.actual_paid) AS income_amount,
					#提现申请总金额
					IFNULL(wc.cash_amount, 0) AS withdraw_amount
				FROM
					`order` o
				LEFT JOIN withdraw_cash wc ON o.seller_steam_uid = wc.steam_uid
				WHERE
					o.`status` = 1
				AND o.date_created BETWEEN #{day_anlyze_start}
				AND #{day_anlyze_stop}
				GROUP BY
					o.seller_steam_uid
			) a
		LEFT JOIN (
			SELECT
				wc.steam_uid,
				SUM(wc.cash_amount) AS pay_success_amount
			FROM
				withdraw_cash wc
			WHERE
				wc.`status` = 5
			AND wc.create_datetime BETWEEN #{day_anlyze_start}
			AND #{day_anlyze_stop}
			GROUP BY
				wc.steam_uid
		) b ON a.seller_steam_uid = steam_uid
		
		)
	</insert> -->	
	<insert id="insertReportForm4">
	INSERT into report4_self_product_day_form_all
	(create_time,seller_type,category_name,type_name,product_uped_total,
	product_sale_total,product_uping_total,dynamic_sales_rate,data_anliyze_time,category_id,type_id,game_type,game_name)
				VALUES
			<foreach collection="list" item="item" index="index" separator=","> 

 
				(
				<if test="item.eleven!=null">
					#{item.eleven},
				</if>
				<if test="item.eleven==null">
					NOW(),
				</if>
				<if test="item.userType!=null">
					#{item.userType},
				</if>
				<if test="item.userType==null">
					'14',
				</if>		
				<if test="item.categoryName!=null">
					#{item.categoryName},
				</if>
				<if test="item.categoryName==null">
					'来也空空',
				</if>	
				<if test="item.typeName!=null">
					#{item.typeName},
				</if>
				<if test="item.typeName==null">
					'去也空空',
				</if>
				<if test="item.upOnTotalNum!=null">
					#{item.upOnTotalNum},
				</if>
				<if test="item.upOnTotalNum==null">
					0,
				</if>
				<if test="item.saleTotalNum!=null">
					#{item.saleTotalNum},
				</if>
				<if test="item.saleTotalNum==null">
					0,
				</if>
				<if test="item.upInTotalNum!=null">
					#{item.upInTotalNum},
				</if>
				<if test="item.upInTotalNum==null">
					0,
				</if>
				<if test="item.status!=null">
					#{item.status},
				</if>
				<if test="item.status==null">
					0,
				</if>
				<if test="item.time!=null">
					#{item.time},
				</if>
				<if test="item.time==null">
					NOW(),
				</if>
				<if test="item.categoryid!=null">
					#{item.categoryid},
				</if>
				<if test="item.categoryid==null">
					0,
				</if>
				<if test="item.typeid!=null">
					#{item.typeid},
				</if>
				<if test="item.typeid==null">
					0,
				</if>
				<if test="item.gameType!=null">
					#{item.gameType},
				</if>
				<if test="item.gameType==null">
					0,
				</if>
				<if test="item.gameName!=null">
					#{item.gameName}
				</if>
				<if test="item.gameName==null">
					0
				</if>
				)
            </foreach>
	
	
	
	</insert>
<select id="findCategory" parameterType="pd" resultType="pd">
		SELECT
		pc.`name`,
		pt.category_id as categoryid,
		pt.id as typeid,
		pt.title,
		pc.app_id as gameType,
		CASE pc.app_id
			WHEN 730 THEN
			'csgo'
			WHEN 570 THEN
			'dota2'
			WHEN 433850 THEN
			'h1z1:KotK'
		    WHEN 295110 THEN
			'h1z1:js'
			END AS gameName
		FROM product_type pt
		LEFT JOIN product_category pc ON pc.id=pt.category_id
		WHERE pt.is_enable=1
		</select>
<select id="queryReportForm4all" parameterType="pd" resultType="pd" >
	select
	time,
	userType,
	category_id as categoryid,
	type_id as typeid,
	categoryName,
	typeName,
	gameType,
	gameName,
	upOnTotalNum,
	saleTotalNum,
	SUM(upInTotalNum) as upInTotalNum,
	(saleTotalNum/(SUM(upInTotalNum)+saleTotalNum))*100 as status,
	NOW() as eleven
	from
		 (select 
			DATE_FORMAT(rf.data_anliyze_time,'%Y-%m-%d') as time,
			rf.seller_type as userType,
			rf.category_name as categoryName,
			rf.category_id,
			rf.type_id,
			rf.type_name as typeName,
			rf.game_type as gameType,
			rf.game_name as gameName,
			sum(rf.product_uped_total) as upOnTotalNum,
			sum(rf.product_sale_total) as saleTotalNum,
			sum(rf.product_uping_total) as upInTotalNum
		from report4_self_product_day_form rf
	  	where
	  	rf.data_anliyze_time >= #{day_anlyze_start} and 
	  	rf.data_anliyze_time &lt;= #{day_anlyze_stop}
	  	group by DATE_FORMAT(rf.data_anliyze_time,'%Y-%m-%d')DESC,rf.seller_type,rf.category_name,rf.type_name,rf.game_type)b
		group by b.userType,b.categoryName,b.typeName,b.gameType
	</select>
<delete id="deleteReportForm4all">
	DELETE from report4_self_product_day_form_all  where data_anliyze_time = #{day_anlyze_start1}
</delete>
<select id="selectReportFormNineTen" parameterType="pd" resultType="pd">
<!-- select c.time,c.incom,c.success,c.free,c.rate,c.eleven,IFNULL(d.buycash,0) as buycash from 

	(SELECT
	a.otime AS time,
	a.incom AS incom,
	CAST(IFNULL(b.success,0)AS DECIMAL(10,2)) AS success,
	CAST((SUM(a.incom)-SUM(b.success))AS DECIMAL(10,2)) AS free,
	round((b.success/(SUM(a.incom)-SUM(b.success)+b.success))*100,2) AS rate,
	NOW() as eleven
	FROM
	(
		SELECT
		DATE_FORMAT(o.date_modified,'%Y-%m-%d')AS otime,
		CAST(SUM(o.actual_paid)AS DECIMAL(10,2)) AS incom
		FROM `order` o
		WHERE o.`status`in(1,3)
	AND o.date_modified >= #{day_anlyze_start} AND o.date_modified &lt;= #{day_anlyze_stop}
	GROUP BY DATE_FORMAT(o.date_modified,'%Y-%m-%d') DESC
	)a
	LEFT JOIN(
		SELECT 
		DATE_FORMAT(wc.last_updated,'%Y-%m-%d') AS wctime,
		CAST(IFNULL(SUM(wc.cash_amount),0)AS DECIMAL(10,2)) AS success
		FROM withdraw_cash wc
		WHERE wc.`status`=5
	GROUP BY DATE_FORMAT(wc.last_updated,'%Y-%m-%d') DESC
	)b ON a.otime=b.wctime) c
	
	left join (SELECT 
				DATE_FORMAT(wl.date_added,'%Y-%m-%d') AS otime,
				CAST(IFNULL(ABS(SUM(wl.total)),0)AS DECIMAL(10,2)) AS buycash
				FROM wallet_log wl
				left join wallet w
				on wl.wallet_id=w.id
				left join steam_user u
				on w.steam_uid=u.steam_uid
				WHERE wl.order_id!=0
				AND wl.total &lt;0
				AND u.user_type IN (1, 3, 6)
				AND wl.date_added > #{day_anlyze_start1} AND wl.date_added &lt;= #{day_anlyze_stop}) d on c.time=d.otime -->
	
	
	select c.time,IFNULL(c.incom,0) as incom ,IFNULL(c.success,0) as success,IFNULL(c.free,0) as free,IFNULL(c.rate,0) as rate,c.eleven,0 as buycash from 

	(SELECT
	a.otime AS time,
	a.incom AS incom,
	CAST(IFNULL(b.success,0)AS DECIMAL(10,2)) AS success,
	CAST((SUM(a.incom)-SUM(b.success))AS DECIMAL(10,2)) AS free,
	round((b.success/(SUM(a.incom)-SUM(b.success)+b.success))*100,2) AS rate,
	NOW() as eleven
	FROM
	(
		SELECT
		DATE_FORMAT(o.created,'%Y-%m-%d')AS otime,
		CAST(SUM(o.cny_amount)AS DECIMAL(10,2)) AS incom
		FROM all_cash_flow o
		WHERE o.confirm_type=3
	AND o.created >= #{day_anlyze_start} AND o.created &lt;= #{day_anlyze_stop}
	GROUP BY DATE_FORMAT(o.created,'%Y-%m-%d') DESC
	)a
	LEFT JOIN(
		SELECT 
		DATE_FORMAT(wc.created,'%Y-%m-%d') AS wctime,
		CAST(IFNULL(SUM(wc.cny_amount),0)AS DECIMAL(10,2)) AS success
		FROM all_cash_flow wc
		WHERE wc.confirm_type=1
	GROUP BY DATE_FORMAT(wc.created,'%Y-%m-%d') DESC
	)b ON a.otime=b.wctime) c
	
	
</select>


<select id="selectReportFormNineTenLast" parameterType="pd" resultType="pd">
	select CAST(IFNULL(not_withdraw_amount,0) AS DECIMAL(10,2)) as not_withdraw_amount from report910_withdraw_day_form where DATE_FORMAT(data_anliyz_time,'%Y-%m-%d')=#{day_anlyze_start1}
</select>

<insert id="insertReportFormNineTen">
 	INSERT INTO report910_withdraw_day_form(income_amount,pay_success_amount,
 	not_withdraw_amount,cash_rate,create_time,data_anliyz_time,buycash)
 		VALUES
				(
				<if test="incom!=null">
					#{incom},
				</if>
				<if test="incom==null">
					0,
				</if>
				<if test="success!=null">
					#{success},
				</if>
				<if test="success==null">
					0,
				</if>	
				<if test="free!=null">
					#{free},
				</if>
				<if test="free==null">
					0,
				</if>
				<if test="rate!=null">
					#{rate},
				</if>
				<if test="rate==null">
					0,
				</if>
				<if test="eleven!=null">
					#{eleven},
				</if>
				<if test="eleven==null">
					0,
				</if>
				<if test="time!=null">
					#{time},
				</if>
				<if test="time==null">
					0,
				</if>
				<if test="buycash!=null">
					#{buycash}
				</if>
				<if test="buycash==null">
					0
				</if>
			)	
		</insert>
<select id="findforshop" parameterType="pd" resultType="pd">	
SELECT 
	IFNULL(IFNULL(a.pname,b.pname),c.pname)AS one,
	IFNULL(c.upingtotal,0)AS ten,
	IFNULL(IFNULL(a.categoryid,b.categoryid),c.categoryid)AS three,
	IFNULL(IFNULL(a.typeid,b.typeid),c.typeid)AS five,
	IFNULL(b.uptotal,0) AS seven,
	IFNULL(IFNULL(a.market_hash_name ,b.market_hash_name),c.market_hash_name) AS eight,
	IFNULL(a.saletotal,0)AS nine,
	IFNULL(a.minprice,0)AS eleven,
	#{dateEnd} as twelve,
	NOW() AS two
FROM
(
SELECT
	COUNT(p.market_hash_name) AS saletotal,
	p.market_hash_name,
	MIN(pt.unit_price) AS minprice,
	p.product_category_id AS categoryid,
	p.product_type_id AS typeid,
	p.`name` AS pname
FROM
	product_trade pt,
	product p
WHERE
	pt.product_id = p.id
	AND pt.`status` =10
GROUP BY
	p.market_hash_name
)a
LEFT JOIN 
(
SELECT
	COUNT(p.market_hash_name) AS uptotal,
	p.market_hash_name,
	p.product_category_id AS categoryid,
	p.product_type_id AS typeid,
	p.`name` AS pname
FROM
	product_trade pt,
	product p
WHERE
	pt.product_id = p.id
	AND pt.`status` != 0
	AND pt.date_created>=#{dateStart}
	AND pt.date_created &lt;=#{dateEnd}
GROUP BY
	p.market_hash_name

)b ON a.market_hash_name=b.market_hash_name
LEFT JOIN
(
SELECT
	COUNT(p.market_hash_name) AS upingtotal,
	p.market_hash_name,
	p.product_category_id AS categoryid,
	p.product_type_id AS typeid,
	p.`name` AS pname
FROM
	product_trade pt,
	product p
WHERE
	pt.product_id = p.id
	AND pt.`status` in(2,3)
GROUP BY
	p.market_hash_name
)c ON a.market_hash_name=c.market_hash_name
UNION
SELECT
	IFNULL(IFNULL(a.pname,b.pname),c.pname)AS one, 
	IFNULL(c.upingtotal,0)AS ten,
	IFNULL(IFNULL(a.categoryid,b.categoryid),c.categoryid)AS three,
	IFNULL(IFNULL(a.typeid,b.typeid),c.typeid)AS five,
	IFNULL(b.uptotal,0) AS seven,
	IFNULL(IFNULL(a.market_hash_name ,b.market_hash_name),c.market_hash_name) AS eight,
	IFNULL(a.saletotal,0)AS nine,
	IFNULL(a.minprice,0)AS eleven,
	#{dateEnd} as twelve,
	NOW() AS two
FROM
(
SELECT
	COUNT(p.market_hash_name) AS saletotal,
	p.market_hash_name,
	MIN(pt.unit_price) AS minprice,
	p.product_category_id AS categoryid,
	p.product_type_id AS typeid,
	p.`name` AS pname
FROM
	product_trade pt,
	product p
WHERE
	pt.product_id = p.id
	AND pt.`status` =10
GROUP BY
	p.market_hash_name
)a
LEFT JOIN 
(
SELECT
	COUNT(p.market_hash_name) AS uptotal,
	p.market_hash_name,
	p.product_category_id AS categoryid,
	p.product_type_id AS typeid,
	p.`name` AS pname
FROM
	product_trade pt,
	product p
WHERE
	pt.product_id = p.id
	AND pt.`status` != 0
	AND pt.date_created >= #{dateStart}
	AND pt.date_created &lt;#{dateEnd}
GROUP BY
	p.market_hash_name

)b ON a.market_hash_name=b.market_hash_name
RIGHT JOIN
(
SELECT
	COUNT(p.market_hash_name) AS upingtotal,
	p.market_hash_name,
	p.product_category_id AS categoryid,
	p.product_type_id AS typeid,
	p.`name` AS pname
FROM
	product_trade pt,
	product p
WHERE
	pt.product_id = p.id
AND pt.`status` in(2,3)
GROUP BY
	p.market_hash_name
)c ON a.market_hash_name=c.market_hash_name

UNION

SELECT 
	IFNULL(IFNULL(a.pname,b.pname),c.pname)AS one,
	IFNULL(c.upingtotal,0)AS ten,
	IFNULL(IFNULL(a.categoryid,b.categoryid),c.categoryid)AS three,
	IFNULL(IFNULL(a.typeid,b.typeid),c.typeid)AS five,
	IFNULL(b.uptotal,0) AS seven,
	IFNULL(IFNULL(a.market_hash_name ,b.market_hash_name),c.market_hash_name) AS eight,
	IFNULL(a.saletotal,0)AS nine,
	IFNULL(a.minprice,0)AS eleven,
	#{dateEnd} as twelve,
	NOW() AS two
FROM
(
SELECT
	COUNT(p.market_hash_name) AS saletotal,
	p.market_hash_name,
	MIN(pt.unit_price) AS minprice,
	p.product_category_id AS categoryid,
	p.product_type_id AS typeid,
	p.`name` AS pname
FROM
	product_trade pt,
	product p
WHERE
	pt.product_id = p.id
	AND pt.`status` =10
GROUP BY
	p.market_hash_name
)a
LEFT JOIN 
(
SELECT
	COUNT(p.market_hash_name) AS uptotal,
	p.market_hash_name,
	p.product_category_id AS categoryid,
	p.product_type_id AS typeid,
	p.`name` AS pname
FROM
	product_trade pt,
	product p
WHERE
	pt.product_id = p.id
	AND pt.`status` != 0
	AND pt.date_created >=#{dateStart}
	AND pt.date_created &lt;=#{dateEnd}
GROUP BY
	p.market_hash_name

)b ON a.market_hash_name=b.market_hash_name
RIGHT JOIN
(
SELECT
	COUNT(p.market_hash_name) AS upingtotal,
	p.market_hash_name,
	p.product_category_id AS categoryid,
	p.product_type_id AS typeid,
	p.`name` AS pname
FROM
	product_trade pt,
	product p
WHERE
	pt.product_id = p.id
	AND pt.`status` in(2,3)
GROUP BY
	p.market_hash_name
)c ON a.market_hash_name=c.market_hash_name	
	</select>
	<insert id="insertuserShop" >
	INSERT INTO sys_usershoptotal
	(`name`,`data_anliyze_time`, `category_id`, `type_id`,`product_uped_num`, `market_hash_name`, `product_sale_total`, `product_uping_total`, `min_saleprice`, `create_time`)
	VALUES 
	<foreach collection="list" item="item" index="index" separator=","> 
		(
		<if test="item.one!=null">
			#{item.one},
		</if>
		<if test="item.one==null">
			0,
		</if>
		<if test="item.twelve!=null">
			#{item.twelve},
		</if>
		<if test="item.twelve==null">
			'1997-07-01 00:00:00',
		</if>
		<if test="item.three!=null">
			#{item.three},
		</if>
		<if test="item.three==null">
			0,
		</if>
		<if test="item.five!=null">
			#{item.five},
		</if>
		<if test="item.five==null">
			0,
		</if>
		<if test="item.seven!=null">
			#{item.seven},
		</if>
		<if test="item.seven==null">
			0,
		</if>
		<if test="item.eight!=null">
			#{item.eight},
		</if>
		<if test="item.eight==null">
			0,
		</if>
		<if test="item.nine!=null">
			#{item.nine},
		</if>
		<if test="item.nine==null">
			0,
		</if>
		<if test="item.ten!=null">
			#{item.ten},
		</if>
		<if test="item.ten==null">
			0,
		</if>
		<if test="item.eleven!=null">
			#{item.eleven},
		</if>
		<if test="item.eleven==null">
			0,
		</if>
		<if test="item.two!=null">
			#{item.two}
		</if>
		<if test="item.two==null">
			'1997-07-01 00:00:00'
		</if>
		)
	</foreach>
	</insert>
	<select id="findforShoplist" parameterType="pd" resultType="pd">
		SELECT s.id
		FROM sys_usershoptotal s
		WHERE s.data_anliyze_time=#{dateStart}
	</select>
	<delete id="deletlistshop" parameterType="pd">
		DELETE FROM sys_usershoptotal
			WHERE data_anliyze_time &lt;#{dateStart}
			</delete>
	<delete id="deleteReportFormNineTen" parameterType="pd">
		DELETE from report910_withdraw_day_form  where data_anliyz_time = #{day_anlyze_start1}
	</delete>
	<select id="queryRobotsIdFromProductTrade" parameterType="pd" resultType="java.lang.String">
		SELECT DISTINCT(steam_uid) from robot_list_dic
	</select>	
	<delete id="deleteRobotCompareAuto">
		delete from robot_compare_auto where last_updated &lt; DATE_SUB(now(),INTERVAL 1 HOUR)
	</delete>
	
	<select id="newqueryReportFormThree" parameterType="pd"   
      statementType="CALLABLE">
      <![CDATA[ 
      {call report3_new_fun_proc(  
       #{day_anlyze_start,jdbcType=VARCHAR,mode=IN},
       #{day_anlyze_stop,jdbcType=VARCHAR,mode=IN}
      )} 
      ]]>   
  </select> 
  
  
  	<!-- 查询所有的提现分析报表数据 -->
	<select id="queryCurrentNoWithdrawCash" parameterType="pd" resultType="pd">
		SELECT
		CAST(IFNULL(SUM(w.total),0)AS DECIMAL(10,2)) as noWithdrawCash,
		u.user_type as user_type,
		NOW() as nowtime
		FROM
		wallet w
		LEFT JOIN steam_user u ON w.steam_uid = u.steam_uid
		WHERE
			u.user_type IN (1,3,4,6)
		GROUP BY
		user_type
	</select>
	
	<select id="queryCurrentIncome" parameterType="pd" resultType="pd">
		SELECT
			DATE_FORMAT(o.date_modified,'%Y-%m-%d')AS otime,
			CAST(SUM(o.actual_paid)AS DECIMAL(10,2)) AS income,
			u.user_type as user_type
			FROM `order` o
			left join steam_user u
			 ON o.seller_steam_uid = u.steam_uid
			WHERE o.`status`in(1,3)
			AND u.user_type IN (1, 3, 4, 6)
		AND o.date_modified > #{day_anlyze_start} AND o.date_modified &lt;= #{day_anlyze_stop}
		GROUP BY otime,user_type
	</select>
	
	
	
	<select id="queryCurrentWithdrawCash" parameterType="pd" resultType="pd">
		SELECT 
			DATE_FORMAT(wc.updated,'%Y-%m-%d') AS otime,
			CAST(IFNULL(SUM(wc.cash_amount),0)AS DECIMAL(10,2)) AS withdrawCash,
			u.user_type as user_type
			FROM withdraw_cash wc
			left join steam_user u
			on wc.steam_uid=u.steam_uid
			WHERE wc.`status`=5
			AND u.user_type IN (1, 3,4, 6)
			AND wc.updated > #{day_anlyze_start} AND wc.updated &lt;= #{day_anlyze_stop}
		GROUP BY otime
	</select>
	
		<select id="queryCurrentBuy" parameterType="pd" resultType="pd">
			SELECT 
				DATE_FORMAT(wl.date_added,'%Y-%m-%d') AS otime,
				CAST(IFNULL(ABS(SUM(wl.total)),0)AS DECIMAL(10,2)) AS buyCash,
				u.user_type as user_type
				FROM wallet_log wl
				left join wallet w
				on wl.wallet_id=w.id
				left join steam_user u
				on w.steam_uid=u.steam_uid
				WHERE wl.order_id!=0
				AND wl.total &lt;0
				AND u.user_type IN (1, 3, 4, 6)
				AND wl.date_added > #{day_anlyze_start} AND wl.date_added &lt;= #{day_anlyze_stop}
			GROUP BY otime,user_type
	</select>
	
	<select id="queryLastNoWithdrawCash" parameterType="pd" resultType="pd">
			SELECT 
				DATE_FORMAT(r.anlyze_data,'%Y-%m-%d') AS otime,
				r.user_type AS user_type,
				CAST(IFNULL(r.nowithdrawcash,0)AS DECIMAL(10,2)) AS lastNodrawCash
				FROM report13_withdraw_cash_form r
				WHERE r.anlyze_data = #{last_day_anlyze_start}
	</select>
	
	
	<insert id="insertWithdrawReportForm" parameterType="java.util.List">
		INSERT into report13_withdraw_cash_form(anlyze_data,user_type,user_name,lastnodrawcash,income,withdrawcash, buycash,nowithdrawcash)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
				<if test="item.anlyze_time!=null">
					#{item.anlyze_time},
				</if>
				<if test="item.anlyze_time==null">
					0,
				</if>
				<if test="item.user_type!=null">
					#{item.user_type},
				</if>
				<if test="item.user_type==null">
					0,
				</if>
				<if test="item.user_name!=null">
					#{item.user_name},
				</if>
				<if test="item.user_name==null">
					0,
				</if>
				<if test="item.lastNodrawCash!=null">
					#{item.lastNodrawCash},
				</if>
				<if test="item.lastNodrawCash==null">
					0,
				</if>
				<if test="item.income!=null">
					#{item.income},
				</if>
				<if test="item.income==null">
					0,
				</if>
				<if test="item.withdrawCash!=null">
					#{item.withdrawCash},
				</if>
				<if test="item.withdrawCash==null">
					0,
				</if>
				<if test="item.buyCash!=null">
					#{item.buyCash},
				</if>
				<if test="item.buyCash==null">
					0,
				</if>
				<if test="item.noWithdrawCash!=null">
					#{item.noWithdrawCash}
				</if>
				<if test="item.noWithdrawCash==null">
					0
				</if>
				)
            </foreach>
	</insert>
	
	<select id="findTime" parameterType="pd" resultType="pd" useCache="false">
		select max(id) as id,max(lasttime) as lasttime
		from 
		  store_time_form	 
	</select>
	
	
	<update id="updateLastTime" parameterType="pd">
		insert into store_time_form(id,lasttime) values(#{id},#{day_anlyze_stop})
	</update>
	
		<!-- 查询提现金额，提现手续费 -->
	<select id="queryWithdraw" parameterType="pd" resultType="pd">
	    select IFNULL(a.withdrawmoney,0) as withdrawmoney,IFNULL(b.withdrawfee,0) as withdrawfee,a.styletype,a.steamid,a.otime from 
		(select sum(cny_amount) as withdrawmoney,u.user_type as styletype,u.steam_uid as steamid,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w ,steam_user u
		where  c.from_wallet_id=w.id and  w.steam_uid=u.steam_uid and u.user_type in (1,3,4,6) and  c.confirm_type=1 and c.created >= #{day_anlyze_start} AND c.created &lt;#{day_anlyze_stop}
		group by otime,steamid) a
		left join (
		select sum(cny_amount) as withdrawfee,u.user_type as styletype,u.steam_uid as steamid,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w,steam_user u 
		where  c.from_wallet_id=w.id and w.steam_uid=u.steam_uid and u.user_type in (1,3,4,6) and c.confirm_type=2 and c.order_number=0  and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		group by otime,steamid
		)b 
		 on a.steamid=b.steamid
	</select>
	
	<!-- 查询充值金额，充值手续费 -->
	
	  <select id="queryRecharge" parameterType="pd" resultType="pd">
	    select IFNULL(a.rechargemoney,0) as rechargemoney,IFNULL(b.rechargefee,0) as rechargefee,a.styletype,a.steamid,a.otime from 
		(select sum(cny_amount) as rechargemoney,u.user_type as styletype,u.steam_uid as steamid,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c ,wallet w ,steam_user u
		where  c.to_wallet_id=w.id and  w.steam_uid=u.steam_uid and u.user_type in (1,3,4,6 ) and c.confirm_type=3 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		group by otime,steamid) a
		left join (
		select sum(cny_amount) as rechargefee,u.user_type as styletype,u.steam_uid as steamid,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c ,wallet w,steam_user u
		where  c.from_wallet_id=w.id  and  w.steam_uid=u.steam_uid and u.user_type in (1,3,4,6 ) and c.confirm_type=4 and c.order_number=0 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		group by otime,steamid
		)b 
		 on a.steamid=b.steamid
	</select>
	
	<!-- 查询收入 -->
	
	 <select id="queryIncome" parameterType="pd" resultType="pd">
	 	select IFNULL(sum(cny_amount),0) as incomemoney,u.user_type as styletype,u.steam_uid as steamid,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w ,steam_user u
		where c.to_wallet_id=w.id and w.steam_uid=u.steam_uid and u.user_type in (1,3,4,6 ) and c.confirm_type=5 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		group by otime,steamid
	 </select>
	 
	 <!-- 查询购买 -->
	  <select id="queryBuy" parameterType="pd" resultType="pd">
	  	select IFNULL(sum(cny_amount),0) as buymoney,u.user_type as styletype,u.steam_uid as steamid,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w,steam_user u 
		where  c.from_wallet_id=w.id and w.steam_uid=u.steam_uid and u.user_type in (1,3,4,6 ) and c.confirm_type=5 and c.created >= #{day_anlyze_start} AND c.created &lt;#{day_anlyze_stop}
		group by otime,steamid
	  </select> 
		
		
		<!-- 一元购收入 -->
	 <select id="queryOneIncome" parameterType="pd" resultType="pd">
	 	select IFNULL(sum(total_price),0) as incomemoney,u.user_type as styletype,u.steam_uid as steamid,DATE_FORMAT(c.date_updated,'%Y-%m-%d') AS otime from treasure_order c ,steam_user u
		where c.seller_steam_uid=u.steam_uid and u.user_type in (1,3,4,6 ) and c.date_updated >= #{day_anlyze_start} AND c.date_updated &lt; #{day_anlyze_stop}  and `status` in (1,3)
		group by otime,steamid
	 </select>
		
		<!-- 一元购购买 -->
	 <select id="queryOneBuy" parameterType="pd" resultType="pd">
	  	select IFNULL(sum(total_price),0) as buymoney,u.user_type as styletype,u.steam_uid as steamid,DATE_FORMAT(c.date_updated,'%Y-%m-%d') AS otime from treasure_order c,steam_user u 
		where  c.buyer_steam_uid=u.steam_uid and u.user_type in (1,3,4,6 ) and c.date_updated >= #{day_anlyze_start} AND c.date_updated &lt;#{day_anlyze_stop}  and `status` in (1,3)
		group by otime,steamid
	  </select> 
		
		
		
	<!-- 查询期初余额 -->
		<select id="queryLast" parameterType="pd" resultType="pd">	
			select m.steam_uid as steamid,IFNULL(n.lastmoney,0) as lastmoney from 
 				(select w.steam_uid from (select from_wallet_id as walletid from all_cash_flow where confirm_type in(1,5,8) and created >= #{day_anlyze_start} AND created &lt;#{day_anlyze_stop} union select to_wallet_id as walletid from all_cash_flow where confirm_type in(3,5,7) and created >= #{day_anlyze_start} AND created &lt; #{day_anlyze_stop})a,wallet w,steam_user u where a.walletid=w.id and w.steam_uid=u.steam_uid and u.user_type in (1,3,4,6 )) m
					left join 
				(SELECT 
				DATE_FORMAT(r.anlyze_data,'%Y-%m-%d') AS otime,
				r.steam_uid AS steamid,
				CAST(IFNULL(r.count_balance_money,0)AS DECIMAL(10,2)) AS lastmoney
				FROM report14_wallet_form r,
				(select steam_uid,max(anlyze_data) as  anlyze_data1 from report14_wallet_form group by steam_uid) r1
				where r.anlyze_data=r1.anlyze_data1 and r.steam_uid=r1.steam_uid) n
			on m.steam_uid =n.steamid
		</select>
		
		<!-- 查询变动用户的余额 -->
		<select id="queryBalance" parameterType="pd" resultType="pd">
				select IFNULL(sum(w.total),0) as total,w.steam_uid,u.user_type,NOW() as pulltime from (select from_wallet_id as walletid from all_cash_flow where confirm_type in (1,5,8) and created >= #{day_anlyze_start} AND created &lt; #{day_anlyze_stop} union select to_wallet_id as walletid from all_cash_flow where confirm_type in (3,5,7) and created >= #{day_anlyze_start} AND created &lt; #{day_anlyze_stop}) a ,wallet w,steam_user u 
				where a.walletid=w.id and w.steam_uid=u.steam_uid and u.user_type in (1,3,4,6)
				group by w.steam_uid,u.user_type
		</select>

	<!-- 查询变动用户的退款 -->
		<select id="queryReturn" parameterType="pd" resultType="pd">
				select IFNULL(sum(cny_amount),0) as returnmoney,u.user_type as styletype,u.steam_uid as steamid,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w,steam_user u 
				where  c.to_wallet_id=w.id and w.steam_uid=u.steam_uid and u.user_type in (1,3,4,6 ) and c.confirm_type in(7,8) and c.created >= #{day_anlyze_start} AND c.created &lt;#{day_anlyze_stop}
				group by otime,steamid
		</select>
		
		<!-- 查询变动用户的追款 -->
		<select id="queryAsk" parameterType="pd" resultType="pd">
				select IFNULL(sum(cny_amount),0) as askmoney,u.user_type as styletype,u.steam_uid as steamid,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w,steam_user u 
				where  c.from_wallet_id=w.id and w.steam_uid=u.steam_uid and u.user_type in (1,3,4,6 ) and c.confirm_type in(8) and c.created >= #{day_anlyze_start} AND c.created &lt;#{day_anlyze_stop}
				group by otime,steamid
		</select>
		
		<!-- 查询兑换券 -->
		<select id="queryCoupon" parameterType="pd" resultType="pd">
				select IFNULL(sum(cny_amount),0) as couponmoney,u.user_type as styletype,u.steam_uid as steamid,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w,steam_user u 
				where  c.to_wallet_id=w.id and w.steam_uid=u.steam_uid and u.user_type in (1,3,4,6 ) and c.confirm_type in(9) and c.created >= #{day_anlyze_start} AND c.created &lt;#{day_anlyze_stop}
				group by otime,steamid
		</select>
		
		<!-- 插入钱包明细统计表 -->
		<insert id="insertWalletReportForm" parameterType="java.util.List">
		INSERT into report14_wallet_form(anlyze_data,steam_uid,user_type_code,user_type,last_money,income_money,recharge_money, recharge_fee,withdraw_money,withdraw_fee,buy_money,balance_money,create_time,pull_time,count_balance_money)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
				<if test="item.anlyze_time!=null">
					#{item.anlyze_time},
				</if>
				<if test="item.anlyze_time==null">
					0,
				</if>
				<if test="item.steam_uid!=null">
					#{item.steam_uid},
				</if>
				<if test="item.steam_uid==null">
					0,
				</if>
				<if test="item.user_type_code!=null">
					#{item.user_type_code},
				</if>
				<if test="item.user_type_code==null">
					0,
				</if>
				<if test="item.user_type_name!=null">
					#{item.user_type_name},
				</if>
				<if test="item.user_type_name==null">
					0,
				</if>
				<if test="item.lastNodrawCash!=null">
					#{item.lastNodrawCash},
				</if>
				<if test="item.lastNodrawCash==null">
					0,
				</if>
				<if test="item.income!=null">
					#{item.income},
				</if>
				<if test="item.income==null">
					0,
				</if>
				<if test="item.rechargeCash!=null">
					#{item.rechargeCash},
				</if>
				<if test="item.rechargeCash==null">
					0,
				</if>
				<if test="item.rechargeFee!=null">
					#{item.rechargeFee},
				</if>
				<if test="item.rechargeFee==null">
					0,
				</if>
				<if test="item.withdrawCash!=null">
					#{item.withdrawCash},
				</if>
				<if test="item.withdrawCash==null">
					0,
				</if>
				<if test="item.withdrawFee!=null">
					#{item.withdrawFee},
				</if>
				<if test="item.withdrawFee==null">
					0,
				</if>
				<if test="item.buyCash!=null">
					#{item.buyCash},
				</if>
				<if test="item.buyCash==null">
					0,
				</if>
				<if test="item.currentCash!=null">
					#{item.currentCash},
				</if>
				<if test="item.currentCash==null">
					0,
				</if>
				<if test="item.create_time!=null">
					#{item.create_time},
				</if>
				<if test="item.create_time==null">
					0,
				</if>
				<if test="item.pull_time!=null">
					#{item.pull_time},
				</if>
				<if test="item.pull_time==null">
					0,
				</if>
				<if test="item.countCurrentCash!=null">
					#{item.countCurrentCash}
				</if>
				<if test="item.countCurrentCash==null">
					0
				</if>
				)
            </foreach>
	</insert>
	
	
	<!-- 查询自营与普通的钱包余额 -->
	<select id="queryBalanceForCus" parameterType="pd" resultType="pd">
		select IFNULL(sum(total),0) as total ,'1' as styletype,NOW() as pulltime from wallet w,steam_user u where w.steam_uid=u.steam_uid and u.user_type in(1,3,6) 
		union 
		select IFNULL(sum(total),0) as total ,'4' as styletype,NOW() as pulltime from wallet w,steam_user u where w.steam_uid=u.steam_uid and u.user_type in(4)
	</select>
	
	
	<!-- 查询上一次拉取的时间 -->
	<select id="findTimeForCus" parameterType="pd" resultType="pd">
		select max(pull_time) as lasttime from report15_customer_form 
	</select>
	
	<!-- 查询自营与普通的充值金额，充值手续费 -->
	<select id="queryRechargeForCus" parameterType="pd" resultType="pd">
	  select IFNULL(a.rechargemoney,0) as rechargemoney,IFNULL(b.rechargefee,0) as rechargefee,'1' as styletype from 
		(select sum(cny_amount) as rechargemoney,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c ,wallet w ,steam_user u
		where  c.to_wallet_id=w.id and  w.steam_uid=u.steam_uid and u.user_type in (1,3,6) and c.confirm_type=3 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		) a
		left join (
		select sum(cny_amount) as rechargefee,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c ,wallet w,steam_user u
		where  c.from_wallet_id=w.id  and  w.steam_uid=u.steam_uid and u.user_type in (1,3,6) and c.confirm_type=4 and c.order_number=0 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
	
		)b on a.otime=b.otime
		union 
	  select IFNULL(a.rechargemoney,0) as rechargemoney,IFNULL(b.rechargefee,0) as rechargefee,'4' as styletype from 
		(select sum(cny_amount) as rechargemoney,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c ,wallet w ,steam_user u
		where  c.to_wallet_id=w.id and  w.steam_uid=u.steam_uid and u.user_type in (4) and c.confirm_type=3 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		) a
		left join (
		select sum(cny_amount) as rechargefee,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c ,wallet w,steam_user u
		where  c.from_wallet_id=w.id  and  w.steam_uid=u.steam_uid and u.user_type in (4) and c.confirm_type=4 and c.order_number=0 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}

		)b on a.otime=b.otime
	</select>
	
	
	<!-- 查询自营与普通的提现金额，提现手续费 -->
	
	<select id="queryWithdrawForCus" parameterType="pd" resultType="pd">
		 select IFNULL(a.withdrawmoney,0) as withdrawmoney,IFNULL(b.withdrawfee,0) as withdrawfee ,'1' as styletype from 
		(select sum(cny_amount) as withdrawmoney,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w ,steam_user u
		where  c.from_wallet_id=w.id and  w.steam_uid=u.steam_uid and u.user_type in (1,3,6) and  c.confirm_type=1 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		) a
		left join (
		select sum(cny_amount) as withdrawfee,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w,steam_user u 
		where  c.from_wallet_id=w.id and w.steam_uid=u.steam_uid and u.user_type in (1,3,6) and c.confirm_type=2 and c.order_number=0 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		)b 
		 on a.otime=b.otime
		 union
		 select IFNULL(a.withdrawmoney,0) as withdrawmoney,IFNULL(b.withdrawfee,0) as withdrawfee ,'4' as styletype from 
		(select sum(cny_amount) as withdrawmoney,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w ,steam_user u
		where  c.from_wallet_id=w.id and  w.steam_uid=u.steam_uid and u.user_type in (4) and  c.confirm_type=1 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		) a
		left join (
		select sum(cny_amount) as withdrawfee,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w,steam_user u 
		where  c.from_wallet_id=w.id and w.steam_uid=u.steam_uid and u.user_type in (4) and c.confirm_type=2 and c.order_number=0 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		)b 
		 on a.otime=b.otime
		 
	</select>
	
	<!-- 查询自营与普通采购金额 -->
	
	<select id="queryCurrentBuyForCus" parameterType="pd" resultType="pd">
		<!-- select IFNULL(sum(cny_amount),0) as buymoney,'1' as styletype,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w,steam_user u 
		where  c.from_wallet_id=w.id and w.steam_uid=u.steam_uid and u.user_type in (1,3,6) and c.confirm_type=5 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		union
		select IFNULL(sum(cny_amount),0) as buymoney,'4' as styletype,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w,steam_user u 
		where  c.from_wallet_id=w.id and w.steam_uid=u.steam_uid and u.user_type in (4) and c.confirm_type=5 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop} -->
		SELECT
			DATE_FORMAT(o.date_modified,'%Y-%m-%d')AS otime,
			CAST(SUM(o.order_total)AS DECIMAL(10,2)) AS buymoney,
			CAST(SUM(o.fee_money)AS DECIMAL(10,2)) AS fee_money,
			'1' as styletype
			FROM `order` o
			left join steam_user u
			 ON o.buyer_steam_uid = u.steam_uid
			WHERE o.`status`in(1,3)
			AND o.payment_method!=7
			AND u.user_type IN (1, 3, 6)
		AND o.date_modified >= #{day_anlyze_start} AND o.date_modified &lt;#{day_anlyze_stop}
		GROUP BY otime
		union 
		SELECT
			DATE_FORMAT(o.date_modified,'%Y-%m-%d')AS otime,
			CAST(SUM(o.order_total)AS DECIMAL(10,2)) AS buymoney,
			CAST(SUM(o.buyer_fee_money)AS DECIMAL(10,2)) AS buyer_fee_money,
			'4' as styletype
			FROM `order` o
			left join steam_user u
			 ON o.buyer_steam_uid = u.steam_uid
			WHERE o.`status`in(1,3)
			AND o.payment_method!=7
			AND u.user_type IN (4)
		AND o.date_modified >= #{day_anlyze_start} AND o.date_modified &lt;#{day_anlyze_stop}
		GROUP BY otime
	</select>
	
	
	<!-- 查询自营与普通收入 -->
	
	<select id="queryIncomeForCus" parameterType="pd" resultType="pd">
		<!-- select IFNULL(sum(cny_amount),0) as incomemoney,'1' as styletype,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w ,steam_user u
		where c.to_wallet_id=w.id and w.steam_uid=u.steam_uid and u.user_type in (1,3,6) and c.confirm_type=5 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		union
		select IFNULL(sum(cny_amount),0) as incomemoney,'4' as styletype,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c, wallet w ,steam_user u
		where c.to_wallet_id=w.id and w.steam_uid=u.steam_uid and u.user_type in (4) and c.confirm_type=5 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop} -->
		
		SELECT
			DATE_FORMAT(o.date_modified,'%Y-%m-%d')AS otime,
			CAST(SUM(o.order_total)AS DECIMAL(10,2)) AS incomemoney,
			'1' as styletype
			FROM `order` o
			left join steam_user u
			 ON o.seller_steam_uid = u.steam_uid
			WHERE o.`status`in(1,3)
			AND o.payment_method!=7
			AND u.user_type IN (1, 3, 6)
		AND o.date_modified >= #{day_anlyze_start} AND o.date_modified &lt;#{day_anlyze_stop}
		GROUP BY otime
		union 
		SELECT
			DATE_FORMAT(o.date_modified,'%Y-%m-%d')AS otime,
			CAST(SUM(o.order_total)AS DECIMAL(10,2)) AS incomemoney,
			'4' as styletype
			FROM `order` o
			left join steam_user u
			 ON o.seller_steam_uid = u.steam_uid
			WHERE o.`status`in(1,3)
			AND o.payment_method!=7
			AND u.user_type IN (4)
		AND o.date_modified >= #{day_anlyze_start} AND o.date_modified &lt;#{day_anlyze_stop}
		GROUP BY otime	
	</select>
	
	 <!-- 查询自营与普通的期初余额 -->
	 <select id="queryLastForCus" parameterType="pd" resultType="pd">
	 		SELECT 
				DATE_FORMAT(r.anlyze_data,'%Y-%m-%d') AS otime,
				r.user_type_code AS styletype,
				IFNULL(r.count_balance_money,0) AS lastmoney
				FROM report15_customer_form r
				WHERE r.anlyze_data = #{last_day_anlyze_start}
	 </select>
	 
	 
	 
	 <!-- 查询自营与普通的一元购收入 -->
	 <select id="queryOneBuySellerForCus" parameterType="pd" resultType="pd">
	 	
	 	SELECT
			DATE_FORMAT(o.date_created,'%Y-%m-%d')AS otime,
			CAST(SUM(o.total_price)AS DECIMAL(10,2)) AS incomemoney,
			'1' as styletype
			FROM treasure_order o
			left join steam_user u
			 ON o.seller_steam_uid = u.steam_uid
			WHERE o.`status`in(1,3)
			AND u.user_type IN (1, 3, 6)
		AND o.date_created >= #{day_anlyze_start} AND o.date_created &lt;#{day_anlyze_stop}
		GROUP BY otime
		union 
		SELECT
			DATE_FORMAT(o.date_created,'%Y-%m-%d')AS otime,
			CAST(SUM(o.total_price)AS DECIMAL(10,2)) AS incomemoney,
			'4' as styletype
			FROM treasure_order o
			left join steam_user u
			 ON o.seller_steam_uid = u.steam_uid
			WHERE o.`status`in(1,3)
			AND u.user_type IN (4)
		AND o.date_created >= #{day_anlyze_start} AND o.date_created &lt;#{day_anlyze_stop}
		GROUP BY otime
	 </select>
	 
	 <!-- 查询自营与普通一元购购买 -->
	 <select id="queryOneBuyBuyerForCus" parameterType="pd" resultType="pd">
	 SELECT
			DATE_FORMAT(o.date_created,'%Y-%m-%d')AS otime,
			CAST(SUM(o.total_price)AS DECIMAL(10,2)) AS buymoney,
			'1' as styletype
			FROM treasure_order o
			left join steam_user u
			 ON o.buyer_steam_uid = u.steam_uid
			WHERE o.`status`in(1,3)
			AND u.user_type IN (1, 3, 6)
		AND o.date_created >= #{day_anlyze_start} AND o.date_created &lt;#{day_anlyze_stop}
		GROUP BY otime
		union 
		SELECT
			DATE_FORMAT(o.date_created,'%Y-%m-%d')AS otime,
			CAST(SUM(o.total_price)AS DECIMAL(10,2)) AS buymoney,
			'4' as styletype
			FROM treasure_order o
			left join steam_user u
			 ON o.buyer_steam_uid = u.steam_uid
			WHERE o.`status`in(1,3)
			AND u.user_type IN (4)
		AND o.date_created >= #{day_anlyze_start} AND o.date_created &lt;#{day_anlyze_stop}
		GROUP BY otime
	</select> 
	 
	 
	<!-- 查询自营与普通的平台退款 -->
	
	<select id="queryPlatformListForCus" parameterType="pd" resultType="pd">
		
		select IFNULL(sum(cny_amount),0) as platformreturnmoney,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime,'1' as styletype from transfer_cash c, wallet w ,steam_user u
		where  c.to_wallet_id=w.id and  w.steam_uid=u.steam_uid and u.user_type in (1,3,6) and  c.transfer_type=2 and `status` =3 and from_wallet_id='110' and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}		 
		 union
		select IFNULL(sum(cny_amount),0) as platformreturnmoney,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime,'4' as styletype from transfer_cash c, wallet w ,steam_user u
		where  c.to_wallet_id=w.id and  w.steam_uid=u.steam_uid and u.user_type in (4) and  c.transfer_type=2 and `status` =3 and from_wallet_id='110' and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
	</select>
	
	
	<!-- c2c自营与普通的结算收入 -->
	<select id="c2cIncome" parameterType="pd" resultType="pd">
		select IFNULL(sum(t.amount),0) as incomemoney,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'1' as styletype from treasure_money_detail t,steam_user u
		where t.in_account=u.steam_uid and u.user_type in (1,3,6) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=2
		union
		select IFNULL(sum(t.amount),0) as incomemoney,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'4' as styletype from treasure_money_detail t,steam_user u
		where t.in_account=u.steam_uid and u.user_type in (4) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=2
	</select>
	
	
	<!-- c2c自营与普通的结算支出 -->
	<select id="c2cPay" parameterType="pd" resultType="pd">
		select IFNULL(sum(t.amount),0) as paymoney,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'1' as styletype from treasure_money_detail t,steam_user u
		where t.out_account=u.steam_uid and u.user_type in (1,3,6) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=2
		union
		select IFNULL(sum(t.amount),0) as paymoney,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'4' as styletype from treasure_money_detail t,steam_user u
		where t.out_account=u.steam_uid and u.user_type in (4) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=2
	</select>
	
	
	<!-- 查询营销费用 -->
	<select id="c2cFee" parameterType="pd" resultType="pd">
		select IFNULL(sum(t.amount),0) as feemoney,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'1' as styletype from treasure_money_detail t,steam_user u
		where t.out_account=u.steam_uid and u.user_type in (1,3,6) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=1
		union
		select IFNULL(sum(t.amount),0) as feemoney,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'4' as styletype from treasure_money_detail t,steam_user u
		where t.out_account=u.steam_uid and u.user_type in (4) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=1
	</select>
	
	<!-- 查询自营与普通的优惠券营销费用 -->
	<select id="voucherForCus" parameterType="pd" resultType="pd">
	  select IFNULL(a.vouchermoney,0) as vouchermoney,'1' as styletype from 
		(select sum(cny_amount) as vouchermoney,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c ,wallet w ,steam_user u
		where  c.to_wallet_id=w.id and  w.steam_uid=u.steam_uid and u.user_type in (1,3,6) and c.from_wallet_id=121 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		) a
		
		union 
	  select IFNULL(a.vouchermoney,0) as vouchermoney,'4' as styletype from 
		(select sum(cny_amount) as vouchermoney,DATE_FORMAT(c.created,'%Y-%m-%d') AS otime from all_cash_flow c ,wallet w ,steam_user u
		where  c.to_wallet_id=w.id and  w.steam_uid=u.steam_uid and u.user_type in (4) and c.from_wallet_id=121 and c.created >= #{day_anlyze_start} AND c.created &lt; #{day_anlyze_stop}
		) a
		
	</select>
	
	<!-- 查询cdk收入 -->
	<select id="cdkIncome" parameterType="pd" resultType="pd">
		select IFNULL(sum(t.amount),0) as cdkincome,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'1' as styletype from goods_money_record t,steam_user u
		where t.in_user=u.id and u.user_type in (1,3,6) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type in (2,3)
		union
		select IFNULL(sum(t.amount),0) as cdkincome,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'4' as styletype from goods_money_record t,steam_user u
		where t.in_user=u.id and u.user_type in (4) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type in (2,3)
	</select>
	
	<!-- 查询cdk支出 -->
	<select id="cdkPay" parameterType="pd" resultType="pd">
		select IFNULL(sum(t.amount),0) as cdkpay,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'1' as styletype from goods_money_record t,steam_user u
		where t.out_user=u.id and u.user_type in (1,3,6) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type in (2,3)
		union
		select IFNULL(sum(t.amount),0) as cdkpay,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'4' as styletype from goods_money_record t,steam_user u
		where t.out_user=u.id and u.user_type in (4) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type in (2,3)
	</select>
	
	
	<!-- 查询cdk保障金收入 -->
	<select id="cdkSecurityIncome" parameterType="pd" resultType="pd">
		select IFNULL(sum(t.amount),0) as cdkincome,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'1' as styletype from goods_money_record t,steam_user u
		where t.in_user=u.id and u.user_type in (1,3,6) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=1
		union
		select IFNULL(sum(t.amount),0) as cdkincome,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'4' as styletype from goods_money_record t,steam_user u
		where t.in_user=u.id and u.user_type in (4) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=1
	</select>
	
	<!-- 查询cdk保障金支出 -->
	<select id="cdkSecurityPay" parameterType="pd" resultType="pd">
		select IFNULL(sum(t.amount),0) as cdkpay,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'1' as styletype from goods_money_record t,steam_user u
		where t.out_user=u.id and u.user_type in (1,3,6) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=1
		union
		select IFNULL(sum(t.amount),0) as cdkpay,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'4' as styletype from goods_money_record t,steam_user u
		where t.out_user=u.id and u.user_type in (4) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=1
	</select>
	
	
	<!-- 查询cdk退款 -->
	<select id="cdkReturn" parameterType="pd" resultType="pd">
		select IFNULL(sum(t.amount),0) as cdkreturn,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'1' as styletype from goods_money_record t,steam_user u
		where t.in_user=u.id and u.user_type in (1,3,6) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=4
		union
		select IFNULL(sum(t.amount),0) as cdkreturn,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'4' as styletype from goods_money_record t,steam_user u
		where t.in_user=u.id and u.user_type in (4) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=4
	</select>
	
	<!-- 查询cdk退款支出 -->
	<select id="cdkReturnPay" parameterType="pd" resultType="pd">
		select IFNULL(sum(t.amount),0) as cdkreturn,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'1' as styletype from goods_money_record t,steam_user u
		where t.out_user=u.id and u.user_type in (1,3,6) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=4
		union
		select IFNULL(sum(t.amount),0) as cdkreturn,DATE_FORMAT(t.date_created,'%Y-%m-%d') AS otime,'4' as styletype from goods_money_record t,steam_user u
		where t.out_user=u.id and u.user_type in (4) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type=4
	</select>
	
	<!-- 查询平台收入 -->
	<select id="platformIncome" parameterType="pd" resultType="pd">
		SELECT
			DATE_FORMAT(o.date_modified,'%Y-%m-%d')AS otime,
			CAST(SUM(o.order_total)AS DECIMAL(10,2)) AS incomemoney,
			'1' as styletype
			FROM `order` o
			left join steam_user u
			 ON o.seller_steam_uid = u.steam_uid
			WHERE o.`status`in(1,3)
			AND o.payment_method=7
			AND u.user_type IN (1, 3, 6)
		AND o.date_modified >= #{day_anlyze_start} AND o.date_modified &lt;#{day_anlyze_stop}
		GROUP BY otime
		union 
		SELECT
			DATE_FORMAT(o.date_modified,'%Y-%m-%d')AS otime,
			CAST(SUM(o.order_total)AS DECIMAL(10,2)) AS incomemoney,
			'4' as styletype
			FROM `order` o
			left join steam_user u
			 ON o.seller_steam_uid = u.steam_uid
			WHERE o.`status`in(1,3)
			AND o.payment_method=7
			AND u.user_type IN (4)
		AND o.date_modified >= #{day_anlyze_start} AND o.date_modified &lt;#{day_anlyze_stop}
		GROUP BY otime	
	</select>
	
	<!-- 查询平台支出 -->	
	<select id="platformPay" parameterType="pd" resultType="pd">
		SELECT
			DATE_FORMAT(o.date_modified,'%Y-%m-%d')AS otime,
			0 AS buymoney,
			'1' as styletype
			FROM `order` o
			WHERE o.`status`in(1,3)
			AND o.payment_method=7
		AND o.date_modified >= #{day_anlyze_start} AND o.date_modified &lt;#{day_anlyze_stop}
		GROUP BY otime
		union 
		SELECT
			DATE_FORMAT(o.date_modified,'%Y-%m-%d')AS otime,
			CAST(SUM(o.order_total)AS DECIMAL(10,2)) AS buymoney,
			'4' as styletype
			FROM `order` o
			WHERE o.`status`in(1,3)
			AND o.payment_method=7
		AND o.date_modified >= #{day_anlyze_start} AND o.date_modified &lt;#{day_anlyze_stop}
		GROUP BY otime
	</select>
	
	<!-- 查询箱子支出 -->
	<select id="boxPay" parameterType="pd" resultType="pd">
		 SELECT
			DATE_FORMAT(o.created,'%Y-%m-%d')AS otime,
			CAST(SUM(o.price)AS DECIMAL(10,2)) AS buymoney,
			'1' as styletype
			FROM unpack_order o
			left join steam_user u
			on o.buyer_id=u.id
			where u.user_type IN (1, 3, 6)
		AND o.created >= #{day_anlyze_start} AND o.created &lt;#{day_anlyze_stop}
		and o.status=1 
		GROUP BY otime
		union
		SELECT
			DATE_FORMAT(o.created,'%Y-%m-%d')AS otime,
			CAST(SUM(o.price)AS DECIMAL(10,2)) AS buymoney,
			'4' as styletype
			FROM unpack_order o
			left join steam_user u
			on o.buyer_id=u.id
			where u.user_type IN (4)
		AND o.created >= #{day_anlyze_start} AND o.created &lt;#{day_anlyze_stop}
		and o.status=1 
		GROUP BY otime	
	</select>
	
	<!-- 查询箱子收入 -->
	<select id="boxIncome" parameterType="pd" resultType="pd">	
		SELECT
			DATE_FORMAT(o.created,'%Y-%m-%d')AS otime,
			0 AS incomemoney,
			'1' as styletype
			FROM unpack_order o
		where o.created >= #{day_anlyze_start} AND o.created &lt;#{day_anlyze_stop}
		and o.status=1 
		GROUP BY otime	
		union
		SELECT
			DATE_FORMAT(o.created,'%Y-%m-%d')AS otime,
			CAST(SUM(o.price)AS DECIMAL(10,2)) AS incomemoney,
			'4' as styletype
			FROM unpack_order o
		where o.created >= #{day_anlyze_start} AND o.created &lt;#{day_anlyze_stop}
		and o.status=1 
		GROUP BY otime	
	</select>
	
	<!-- 查询回购收入 -->	
	<select id="boxReturnIncome" parameterType="pd" resultType="pd">
		 SELECT
			IFNULL(CAST(SUM(o.buyback_price)AS DECIMAL(10,2)),0) AS incomemoney,
			'1' as styletype
			FROM unpack_order o
		WHERE o.updated >= #{day_anlyze_start} AND o.updated &lt;#{day_anlyze_stop}
		and o.status=1 and flag=2
		union 
		SELECT
			0 AS incomemoney,
			'4' as styletype
			FROM unpack_order o
		where o.updated >= #{day_anlyze_start} AND o.updated &lt;#{day_anlyze_stop}
		and o.status=1 and flag=2
	</select>
	
	<!-- 查询回购支出 -->
	<select id="boxReturnPay" parameterType="pd" resultType="pd">
		SELECT
			0 AS paymoney,
			'1' as styletype
			FROM unpack_order o
		where o.updated >= #{day_anlyze_start} AND o.updated &lt;#{day_anlyze_stop}
		and o.status=1 and flag=2
		union
		 SELECT
			IFNULL(CAST(SUM(o.buyback_price)AS DECIMAL(10,2)),0) AS paymoney,
			'4' as styletype
			FROM unpack_order o
		WHERE o.updated >= #{day_anlyze_start} AND o.updated &lt;#{day_anlyze_stop}
		and o.status=1 and flag=2
	</select>
	
	
	<!-- 查询抢座位收入 -->
	<select id="seatIncome" parameterType="pd" resultType="pd">
		select IFNULL(sum(t.amount),0) as seatincome,'1' as styletype from seat_money_record t,steam_user u
		where t.in_user=u.id and u.user_type in (1,3,6) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type in (2,3,4,5)
		union
		select IFNULL(sum(t.amount),0) as seatincome,'4' as styletype from seat_money_record t,steam_user u
		where t.in_user=u.id and u.user_type in (4) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type in (2,3,4,5)
	</select>
	
	<!-- 查询抢座位支出 -->
	<select id="seatPay" parameterType="pd" resultType="pd">
		select IFNULL(sum(t.amount),0) as seatpay,'1' as styletype from seat_money_record t,steam_user u
		where t.out_user=u.id and u.user_type in (1,3,6) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type in (2,3,4,5)
		union
		select IFNULL(sum(t.amount),0) as seatpay,'4' as styletype from seat_money_record t,steam_user u
		where t.out_user=u.id and u.user_type in (4) and t.date_created >= #{day_anlyze_start} AND t.date_created &lt; #{day_anlyze_stop} and service_type in (2,3,4,5)
	</select>
	
	 <!-- 插入客户对账表 -->
	 <select id="insertCustomerReportForm" parameterType="java.util.List">
	 	INSERT into report15_customer_form(anlyze_data,user_type_code,user_type,last_money,income_money,recharge_money, recharge_fee,withdraw_money,withdraw_fee,buy_money,balance_money,create_time,pull_time,count_balance_money,one_income_money,one_buy_money,platform_return_money,c2c_income_money,c2c_pay_money,c2c_fee,marking_money,trade_fee_money,cdk_income_money,cdk_pay_money,cdk_return_money,
	 						platform_income_money,platform_pay_money,box_income_money,box_pay_money,box_return_income,box_return_pay,cdk_security_income,cdk_security_pay,cdk_return_money_pay,seat_income,seat_pay
	 						)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
				<if test="item.anlyze_time!=null">
					#{item.anlyze_time},
				</if>
				<if test="item.anlyze_time==null">
					0,
				</if>
				<if test="item.user_type_code!=null">
					#{item.user_type_code},
				</if>
				<if test="item.user_type_code==null">
					0,
				</if>
				<if test="item.user_type_name!=null">
					#{item.user_type_name},
				</if>
				<if test="item.user_type_name==null">
					0,
				</if>
				<if test="item.lastNodrawCash!=null">
					#{item.lastNodrawCash},
				</if>
				<if test="item.lastNodrawCash==null">
					0,
				</if>
				<if test="item.income!=null">
					#{item.income},
				</if>
				<if test="item.income==null">
					0,
				</if>
				<if test="item.rechargeCash!=null">
					#{item.rechargeCash},
				</if>
				<if test="item.rechargeCash==null">
					0,
				</if>
				<if test="item.rechargeFee!=null">
					#{item.rechargeFee},
				</if>
				<if test="item.rechargeFee==null">
					0,
				</if>
				<if test="item.withdrawCash!=null">
					#{item.withdrawCash},
				</if>
				<if test="item.withdrawCash==null">
					0,
				</if>
				<if test="item.withdrawFee!=null">
					#{item.withdrawFee},
				</if>
				<if test="item.withdrawFee==null">
					0,
				</if>
				<if test="item.buyCash!=null">
					#{item.buyCash},
				</if>
				<if test="item.buyCash==null">
					0,
				</if>
				<if test="item.currentCash!=null">
					#{item.currentCash},
				</if>
				<if test="item.currentCash==null">
					0,
				</if>
				<if test="item.create_time!=null">
					#{item.create_time},
				</if>
				<if test="item.create_time==null">
					0,
				</if>
				<if test="item.pull_time!=null">
					#{item.pull_time},
				</if>
				<if test="item.pull_time==null">
					0,
				</if>		
				<if test="item.countCurrentCash!=null">
					#{item.countCurrentCash},
				</if>
				<if test="item.countCurrentCash==null">
					0,
				</if>
				
				<if test="item.onebuyIncome!=null">
					#{item.onebuyIncome},
				</if>
				<if test="item.onebuyIncome==null">
					0,
				</if>
				
				<if test="item.onebuyBuyCash!=null">
					#{item.onebuyBuyCash},
				</if>
				<if test="item.onebuyBuyCash==null">
					0,
				</if>				
				<if test="item.platformReturnMoney!=null">
					#{item.platformReturnMoney},
				</if>
				<if test="item.platformReturnMoney==null">
					0,
				</if>
				<if test="item.c2cIncome!=null">
					#{item.c2cIncome},
				</if>
				<if test="item.c2cIncome==null">
					0,
				</if>
				<if test="item.c2cPay!=null">
					#{item.c2cPay},
				</if>
				<if test="item.c2cPay==null">
					0,
				</if>
				<if test="item.c2cFee!=null">
					#{item.c2cFee},
				</if>
				<if test="item.c2cFee==null">
					0,
				</if>
				<if test="item.voucher_money!=null">
					#{item.voucher_money},
				</if>
				<if test="item.voucher_money==null">
					0,
				</if>
				<if test="item.buyer_fee_money!=null">
					#{item.buyer_fee_money},
				</if>
				<if test="item.buyer_fee_money==null">
					0,
				</if>
				<if test="item.cdkIncome!=null">
					#{item.cdkIncome},
				</if>
				<if test="item.cdkIncome==null">
					0,
				</if>
				<if test="item.cdkPay!=null">
					#{item.cdkPay},
				</if>
				<if test="item.cdkPay==null">
					0,
				</if>
				<if test="item.cdkReturn!=null">
					#{item.cdkReturn},
				</if>
				<if test="item.cdkReturn==null">
					0,
				</if>
				
				<if test="item.platformIncome!=null">
					#{item.platformIncome},
				</if>
				<if test="item.platformIncome==null">
					0,
				</if>

				<if test="item.platformPay!=null">
					#{item.platformPay},
				</if>
				<if test="item.platformPay==null">
					0,
				</if>				
				<if test="item.boxIncome!=null">
					#{item.boxIncome},
				</if>
				<if test="item.boxIncome==null">
					0,
				</if>				
				<if test="item.boxPay!=null">
					#{item.boxPay},
				</if>
				<if test="item.boxPay==null">
					0,
				</if>
				
				<if test="item.box_return_income!=null">
					#{item.box_return_income},
				</if>
				<if test="item.box_return_income==null">
					0,
				</if>
				
				<if test="item.box_return_pay!=null">
					#{item.box_return_pay},
				</if>
				<if test="item.box_return_pay==null">
					0,
				</if>
				
				<if test="item.cdk_security_income!=null">
					#{item.cdk_security_income},
				</if>
				<if test="item.cdk_security_income==null">
					0,
				</if>
				
				<if test="item.cdk_security_pay!=null">
					#{item.cdk_security_pay},
				</if>
				<if test="item.cdk_security_pay==null">
					0,
				</if>
				
				<if test="item.cdkReturnPay!=null">
					#{item.cdkReturnPay},
				</if>
				<if test="item.cdkReturnPay==null">
					0,
				</if>
				
				<if test="item.seat_income!=null">
					#{item.seat_income},
				</if>
				<if test="item.seat_income==null">
					0,
				</if>
				
				<if test="item.seat_pay!=null">
					#{item.seat_pay}
				</if>
				<if test="item.seat_pay==null">
					0
				</if>
				
				)
            </foreach>
		</select>
		
		
	<!-- 删除数据 -->
	<delete id="deleteReportFormSixteen" parameterType="pd">
		DELETE from report16_channel_form  where DATE_FORMAT(anlyze_data,'%Y-%m-%d') = #{data_anliyze_time1}
	</delete>
	<!-- 查询渠道的提现金额，充值金额 -->
	<select id="queryReportForChannel" parameterType="pd" resultType="pd">
			select IFNULL(a.withdrawmoney,0) as withdrawmoney, IFNULL(b.rechargemoney,0) as rechargemoney,IFNULL(a.channel,b.channel) as channel,IFNULL(a.otime,b.otime) as otime from 
			(select sum(cny_amount) as withdrawmoney,channel,DATE_FORMAT(created,'%Y-%m-%d') AS otime from all_cash_flow where confirm_type=1 AND  created >= #{day_anlyze_start} AND created &lt; #{day_anlyze_stop}
			group by channel,otime) a
			left join 
			(select sum(cny_amount) as rechargemoney,channel,DATE_FORMAT(created,'%Y-%m-%d') AS otime from all_cash_flow where confirm_type=3 AND  created >= #{day_anlyze_start} AND created &lt; #{day_anlyze_stop}
			group by channel,otime) b
			on a.channel=b.channel
			union 
			select IFNULL(a.withdrawmoney,0) as withdrawmoney, IFNULL(b.rechargemoney,0) as rechargemoney,IFNULL(a.channel,b.channel) as channel,IFNULL(a.otime,b.otime) as otime from 
			(select sum(cny_amount) as withdrawmoney,channel,DATE_FORMAT(created,'%Y-%m-%d') AS otime from all_cash_flow where confirm_type=1 AND  created >= #{day_anlyze_start} AND created &lt; #{day_anlyze_stop}
			group by channel,otime) a
			right join 
			(select sum(cny_amount) as rechargemoney,channel,DATE_FORMAT(created,'%Y-%m-%d') AS otime from all_cash_flow where confirm_type=3 AND  created >= #{day_anlyze_start} AND created &lt; #{day_anlyze_stop}
			group by channel,otime) b
			on a.channel=b.channel	
	</select>
	
	<!-- 插入渠道报表的数据 -->
	<select id="insertReportFormSixteen" parameterType="java.util.List">
	 	INSERT into report16_channel_form(anlyze_data,channel_code,recharge_money,withdraw_money,create_time)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
				<if test="item.otime!=null">
					#{item.otime},
				</if>
				<if test="item.otime==null">
					0,
				</if>
				<if test="item.channel!=null">
					#{item.channel},
				</if>
				<if test="item.channel==null">
					0,
				</if>
				<if test="item.rechargemoney!=null">
					#{item.rechargemoney},
				</if>
				<if test="item.rechargemoney==null">
					0,
				</if>
				<if test="item.withdrawmoney!=null">
					#{item.withdrawmoney},
				</if>
				<if test="item.withdrawmoney==null">
					0,
				</if>
				 NOW()
				)
            </foreach>
		</select>
	
	<!-- 提前一天查询所有用户钱包的期初值 -->
		<select id="querywalletCash" parameterType="pd" resultType="pd">
			select CAST(SUM(w.total) AS DECIMAL(10,2)) as total,w.steam_uid,u.user_type,NOW() as pulltime from wallet w left join steam_user u on w.steam_uid=u.steam_uid
			where u.user_type in(1,3,4,6) group by w.steam_uid,u.user_type
		</select>
	
	
<select id="insertInitWalletReportForm" parameterType="java.util.List">
	 	INSERT into report17_initwallet_form(total,steam_uid,user_type,pull_time,create_time)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
				<if test="item.total!=null">
					#{item.total},
				</if>
				<if test="item.total==null">
					0,
				</if>
				<if test="item.steam_uid!=null">
					#{item.steam_uid},
				</if>
				<if test="item.steam_uid==null">
					0,
				</if>
				<if test="item.user_type!=null">
					#{item.user_type},
				</if>
				<if test="item.user_type==null">
					0,
				</if>
				<if test="item.pull_time!=null">
					#{item.pull_time},
				</if>
				<if test="item.pull_time==null">
					0,
				</if>
				 NOW()
				)
            </foreach>
		</select>
	
	
	<!-- 插入期初的钱包明细表 -->
		<insert id="insertInitWalletReportForm14" parameterType="java.util.List">
		INSERT into report14_wallet_form(anlyze_data,steam_uid,user_type_code,balance_money,create_time)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
				<if test="item.anlyze_time!=null">
					#{item.anlyze_time},
				</if>
				<if test="item.anlyze_time==null">
					0,
				</if>
				<if test="item.steam_uid!=null">
					#{item.steam_uid},
				</if>
				<if test="item.steam_uid==null">
					0,
				</if>
				<if test="item.user_type!=null">
					#{item.user_type},
				</if>
				<if test="item.user_type==null">
					0
				</if>
				<if test="item.total!=null">
					#{item.total},
				</if>
				<if test="item.total==null">
					0
				</if>
				NOW()
				)
            </foreach>
	</insert>
	
	
	
	<insert id="insertInitWalletReportForm15" parameterType="java.util.List">
	INSERT into report15_customer_form(anlyze_data,user_type_code,balance_money,create_time)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
				<if test="item.anlyze_time!=null">
					#{item.anlyze_time},
				</if>
				<if test="item.anlyze_time==null">
					0,
				</if>
				<if test="item.user_type!=null">
					#{item.user_type},
				</if>
				<if test="item.user_type==null">
					0
				</if>
				<if test="item.total!=null">
					#{item.total},
				</if>
				<if test="item.total==null">
					0
				</if>
				NOW()
				)
            </foreach>
	</insert>
	
		<!-- new_begin我的 -->
	<!-- 查询当天入库数量、金额 -->
	<select id="querySelfInvoicingEight" parameterType="pd" resultType="pd">
		SELECT 
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.purchase_price) as totalMoney
		FROM product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		where
		pt.id=pto.ptid 
		and po.res_int in (1,2)
		and pt.`status`!=0
		and pt.`status`!=6
		and pt.app_id=730
		and pt.date_created >= #{day_anlyze_start} and pt.date_created &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`
	</select>
	<!-- 查询当天出库数量、金额 -->
	<select id="querySelfInvoicingNine" parameterType="pd" resultType="pd">
	SELECT
		na.time as time,
		na.`name` as name,
		na.categoryId as categoryId,
		(na.num+IFNULL(nb.num,0)) as num,
		(na.totalMoney+IFNULL(nb.totalMoney,0)) as totalMoney
		FROM
		(SELECT
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.unit_price) as totalMoney
		from  product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		JOIN library_trade_order lto
		LEFT JOIN library_order lo on lo.id=lto.loId
		WHERE
		pt.id=pto.ptid
		and pt.id=lto.ptId 
		and pt.`status`=62
		and po.res_int in (1,2)
		and pt.app_id=730
		and pt.last_updated >= #{day_anlyze_start} and pt.last_updated &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`)na
		LEFT JOIN
		(SELECT
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.unit_price) as totalMoney
		from  product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		WHERE
		pt.id=pto.ptid
		and pt.`status`=10
		and po.res_int in (1,2)
		and pt.app_id=730
		and pt.last_updated >= #{day_anlyze_start} and pt.last_updated &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`)nb	ON na.`name`=nb.`name`
		UNION
		SELECT
		nb.time as time,
		nb.`name` as name,
		nb.categoryId as categoryId,
		(IFNULL(na.num,0)+nb.num) as num,
		(IFNULL(na.totalMoney,0)+nb.totalMoney) as totalMoney
		FROM
		(SELECT
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.unit_price) as totalMoney
		from  product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		JOIN library_trade_order lto
		LEFT JOIN library_order lo on lo.id=lto.loId
		WHERE
		pt.id=pto.ptid
		and pt.id=lto.ptId 
		and pt.`status`=62
		and po.res_int in (1,2)
		and pt.app_id=730
		and pt.last_updated >= #{day_anlyze_start} and pt.last_updated &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`)na
		RIGHT JOIN
		(SELECT
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.unit_price) as totalMoney
		from  product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		WHERE
		pt.id=pto.ptid
		and pt.`status`=10
		and po.res_int in (1,2)
		and pt.app_id=730
		and pt.last_updated >= #{day_anlyze_start} and pt.last_updated &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`)nb	ON na.`name`=nb.`name` 
	</select>
	<!-- 查询当天销售入库数量、金额 -->
	<select id="querySelfInvoicingOne" parameterType="pd" resultType="pd">
		SELECT 
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.purchase_price) as totalMoney
		FROM product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		where
		pt.id=pto.ptid 
		and pt.`status`!=0
		and pt.`status`!=6
		and po.res_int=1
		and pt.app_id=730
		and pt.date_created >= #{day_anlyze_start} and pt.date_created &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`
	</select>
	<!-- 查询当天物料入库数量、金额 -->
	<select id="querySelfInvoicingTwo" parameterType="pd" resultType="pd">
		SELECT 
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.purchase_price) as totalMoney
		FROM product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		where
		pt.id=pto.ptid
		and pt.`status`!=0
		and pt.`status`!=6 
		and po.res_int=2
		and pt.app_id=730
		and pt.date_created >= #{day_anlyze_start} and pt.date_created &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`
	</select>
	<!-- 查询当天批发出库数量、金额-->
	<select id="querySelfInvoicingThree" parameterType="pd" resultType="pd">
		SELECT
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.unit_price) as totalMoney
		from  product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		JOIN library_trade_order lto
		LEFT JOIN library_order lo on lo.id=lto.loId
		WHERE
		pt.id=pto.ptid
		and pt.id=lto.ptId 
		and lo.res_int=3
		and pt.`status`=62
		and po.res_int in (1,2)
		and pt.app_id=730
		and pt.last_updated >= #{day_anlyze_start} and pt.last_updated &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`
	</select>
	<!-- 查询当天零售出库数量、金额 -->
	<select id="querySelfInvoicingFour" parameterType="pd" resultType="pd">
<!-- 		SELECT 
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.purchase_price) as totalMoney
		FROM product_trade pt
		LEFT JOIN `order` o ON o.order_object_id=pt.id
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN library_trade_order lto
		LEFT JOIN library_order lo on lo.id=lto.loId
		WHERE
		pt.id=lto.ptId 	
		and pt.`status` in (10,8)
		and o.`status`=1
		and pt.last_updated >=#{day_anlyze_start} and pt.last_updated &lt;=#{day_anlyze_stop}
		GROUP BY pc.`name` -->
		SELECT
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.unit_price) as totalMoney
		from  product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		WHERE
		pt.id=pto.ptid
		and pt.`status`=10
		and po.res_int in (1,2)
		and pt.app_id=730
		and pt.last_updated >= #{day_anlyze_start} and pt.last_updated &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`
	</select>
	<!-- 查询当天物料出库数量、金额-->
	<select id="querySelfInvoicingFive" parameterType="pd" resultType="pd">
		SELECT
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.unit_price) as totalMoney
		from  product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		JOIN library_trade_order lto
		LEFT JOIN library_order lo on lo.id=lto.loId
		WHERE
		pt.id=pto.ptid
		and pt.id=lto.ptId 
		and lo.res_int=4
		and pt.`status`=62
		and po.res_int in (1,2)
		and pt.app_id=730
		and pt.last_updated >= #{day_anlyze_start} and pt.last_updated &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`
	</select>
	<!-- 查询当天营销出库数量、金额-->
	<select id="querySelfInvoicingSix" parameterType="pd" resultType="pd">
		SELECT
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.unit_price) as totalMoney
		from  product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		JOIN library_trade_order lto
		LEFT JOIN library_order lo on lo.id=lto.loId
		WHERE
		pt.id=pto.ptid
		and pt.id=lto.ptId 
		and lo.res_int=5
		and pt.`status`=62
		and po.res_int in (1,2)
		and pt.app_id=730
		and pt.last_updated >= #{day_anlyze_start} and pt.last_updated &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`
	</select>
	<!-- 查询当天剩余库存 -->
	<select id="querySelfInvoicingSeven" parameterType="pd" resultType="pd">
		SELECT
			<!-- DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time, -->
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.unit_price) as totalMoney
		FROM product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		WHERE
		pt.id=pto.ptid
		and pt.`status` in (1,2,3,60,61,63)
		and po.res_int in (1,2)
		and pt.app_id=730
		and pt.last_updated &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`
	</select>
	<!-- 根据日期删除report17_selfinvoicing_form中数据 -->
	<delete id="deleteReportFormSelfInvoicing" parameterType="pd">
		delete from report17_selfinvoicing_form where DATE_FORMAT(data_anliyze_time,'%Y-%m-%d')=#{data_anliyze_time1}
	</delete>
	<!-- 自营进销存组装数据添加到中间表report17_selfinvoicing_form -->
	<insert id="saveSelfInvoicingDatas" parameterType="java.util.List">
		insert into report17_selfinvoicing_form
		(
			data_anliyze_time,
			create_time,
			product_category_type,
			product_category_name,
			storage_quantity,
			storage_amount,
			outgoing_quantity,
			outgoing_amount,
			stock_quantity,
			stock_amount,
			sales_storage_quantity,
			sales_storage_amount,
			material_storage_quantity,
			material_storage_amount,
			wholesale_outgoing_quantity,
			wholesale_outgoing_amount,
			retail_outgoing_quantity,
			retail_outgoing_amount,
			material_outgoing_quantity,
			material_outgoing_amount,
			marketing_outgoing_quantity,
			marketing_outgoing_amount
		)
		values
		<foreach collection="list" item="item" index="index" separator="," >
		(
			#{item.data_anliyze_time},
			#{item.create_time},
			#{item.product_category_type},
			#{item.product_category_name},
			<if test="item.storage_quantity!=null">
			#{item.storage_quantity},
			</if>
			<if test="item.storage_quantity==null">
			0,
			</if>
			<if test="item.storage_amount!=null">
			#{item.storage_amount},
			</if>
			<if test="item.storage_amount==null">
			0,
			</if>
			<if test="item.outgoing_quantity!=null">
			#{item.outgoing_quantity},
			</if>
			<if test="item.outgoing_quantity==null">
			0,
			</if>
			<if test="item.outgoing_amount!=null">
			#{item.outgoing_amount},
			</if>
			<if test="item.outgoing_amount==null">
			0,
			</if>
			<if test="item.stock_quantity!=null">
			#{item.stock_quantity},
			</if>
			<if test="item.stock_quantity==null">
			0,
			</if>
			<if test="item.stock_amount!=null">
			#{item.stock_amount},
			</if>
			<if test="item.stock_amount==null">
			0,
			</if>
			<if test="item.sales_storage_quantity!=null">
			#{item.sales_storage_quantity},
			</if>
			<if test="item.sales_storage_quantity==null">
			0,
			</if>
			<if test="item.sales_storage_amount!=null">
			#{item.sales_storage_amount},
			</if>
			<if test="item.sales_storage_amount==null">
			0,
			</if>
			<if test="item.material_storage_quantity!=null">
			#{item.material_storage_quantity},
			</if>
			<if test="item.material_storage_quantity==null">
			0,
			</if>
			<if test="item.material_storage_amount!=null">
			#{item.material_storage_amount},
			</if>
			<if test="item.material_storage_amount==null">
			0,
			</if>
			<if test="item.wholesale_outgoing_quantity!=null">
			#{item.wholesale_outgoing_quantity},
			</if>
			<if test="item.wholesale_outgoing_quantity==null">
			0,
			</if>
			<if test="item.wholesale_outgoing_amount!=null">
			#{item.wholesale_outgoing_amount},
			</if>
			<if test="item.wholesale_outgoing_amount==null">
			0,
			</if>
			<if test="item.retail_outgoing_quantity!=null">
			#{item.retail_outgoing_quantity},
			</if>
			<if test="item.retail_outgoing_quantity==null">
			0,
			</if>
			<if test="item.retail_outgoing_amount!=null">
			#{item.retail_outgoing_amount},
			</if>
			<if test="item.retail_outgoing_amount==null">
			0,
			</if>
			<if test="item.material_outgoing_quantity!=null">
			#{item.material_outgoing_quantity},
			</if>
			<if test="item.material_outgoing_quantity==null">
			0,
			</if>
			<if test="item.material_outgoing_amount!=null">
			#{item.material_outgoing_amount},
			</if>
			<if test="item.material_outgoing_amount==null">
			0,
			</if>
			<if test="item.marketing_outgoing_quantity!=null">
			#{item.marketing_outgoing_quantity},
			</if>
			<if test="item.marketing_outgoing_quantity==null">
			0,
			</if>
			<if test="item.marketing_outgoing_amount!=null">
			#{item.marketing_outgoing_amount}
			</if>
			<if test="item.marketing_outgoing_amount==null">
			0
			</if>
			)
		</foreach>
		
	</insert>
	
	<!-- 查询当天营销入库数量、金额 -->
	<select id="querySelfMarketingOne" parameterType="pd" resultType="pd">
		SELECT 
			DATE_FORMAT(pt.date_created,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.purchase_price) as totalMoney
		FROM product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		where
		pt.id=pto.ptid 
		and po.res_int = -1
		and pt.`status`!=0
		and pt.`status`!=6
		and pt.app_id=730
		and pt.date_created >= #{day_anlyze_start} and pt.date_created &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`
	</select>
	
	<!-- 查询当天营销出库数量、金额 -->
	<select id="querySelfMarketingTwo" parameterType="pd" resultType="pd">
		SELECT
			DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time,
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.unit_price) as totalMoney
		from  product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		WHERE
		pt.id=pto.ptid
		and pt.`status`=8
		and po.res_int = -1
		and pt.app_id=730
		and pt.last_updated >= #{day_anlyze_start} and pt.last_updated &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`
	</select>
	
	<!-- 查询当天剩余库存 -->
	<select id="querySelfMarketingThree" parameterType="pd" resultType="pd">
		SELECT
			<!-- DATE_FORMAT(pt.last_updated,'%Y-%m-%d') as time, -->
			IFNULL(pc.`name`,'其他') as name,
			p.product_category_id as categoryId,
			COUNT(1) as num,
			SUM(pt.unit_price) as totalMoney
		FROM product_trade pt
		LEFT JOIN product p on pt.product_id=p.id
		LEFT JOIN product_category pc on p.product_category_id=pc.id
		JOIN payment_trade_order pto 
		LEFT JOIN payment_order po on po.id=pto.poid
		WHERE
		pt.id=pto.ptid
		and pt.`status` in (1,7)
		and po.res_int = -1
		and pt.app_id=730
		and pt.last_updated &lt;= #{day_anlyze_stop}
		GROUP BY pc.`name`
	</select>
	
	<!-- 根据日期删除report18_marketing_form中数据 -->
	<delete id="deleteReportFormSelfMarketing" parameterType="pd">
		delete from report18_marketing_form where DATE_FORMAT(data_anliyze_time,'%Y-%m-%d')=#{data_anliyze_time1}
	</delete>
	
	<!-- 自营进销存组装数据添加到中间表report18_marketing_form -->
	<insert id="saveSelfMarketingDatas" parameterType="java.util.List">
		insert into report18_marketing_form
		(
			data_anliyze_time,
			create_time,
			product_category_type,
			product_category_name,
			storage_quantity,
			storage_amount,
			outgoing_quantity,
			outgoing_amount,
			stock_quantity,
			stock_amount
		)
		values
		<foreach collection="list" item="item" index="index" separator="," >
		(
			#{item.data_anliyze_time},
			#{item.create_time},
			#{item.product_category_type},
			#{item.product_category_name},
			<if test="item.storage_quantity!=null">
			#{item.storage_quantity},
			</if>
			<if test="item.storage_quantity==null">
			0,
			</if>
			<if test="item.storage_amount!=null">
			#{item.storage_amount},
			</if>
			<if test="item.storage_amount==null">
			0,
			</if>
			<if test="item.outgoing_quantity!=null">
			#{item.outgoing_quantity},
			</if>
			<if test="item.outgoing_quantity==null">
			0,
			</if>
			<if test="item.outgoing_amount!=null">
			#{item.outgoing_amount},
			</if>
			<if test="item.outgoing_amount==null">
			0,
			</if>
			<if test="item.stock_quantity!=null">
			#{item.stock_quantity},
			</if>
			<if test="item.stock_quantity==null">
			0,
			</if>
			<if test="item.stock_amount!=null">
			#{item.stock_amount}
			</if>
			<if test="item.stock_amount==null">
			0
			</if>
			)
		</foreach>
		
	</insert>
	<!-- end -->
	
	
	<!-- 查询上周的用户 -->
	<select id="queryAllSeller" parameterType="pd" resultType="pd">
	select DISTINCT pt.steam_uid as seller_steam_uid,u.personaname from user_shop s left join product_trade pt on s.steam_uid= pt.steam_uid left join steam_user u on pt.steam_uid=u.steam_uid where u.user_type in(1,3,6) and pt.`status` in(1,2,3,10) and s.status=2 and s.shop_status=1 and pt.last_updated>= #{day_anlyze_start} AND pt.last_updated &lt; #{day_anlyze_stop}
	union 
	select DISTINCT o.seller_steam_uid,u.personaname from user_shop s left join `order` o on s.steam_uid=o.seller_steam_uid left join  steam_user u on o.seller_steam_uid=u.steam_uid where u.user_type in(1,3,6) and o.`status` =1 and s.status=2 and s.shop_status=1 and date_modified>=#{day_anlyze_start} AND date_modified &lt; #{day_anlyze_stop}
	</select>
	
	<!-- 查询用户的上架数量 -->
<select id="queryAllSellerOnCount" parameterType="pd" resultType="pd">
	SELECT 
			pt.steam_uid AS seller_steam_uid,
				COUNT(pt.steam_uid) AS put_on_number
				FROM user_shop s left join 
					product_trade pt on s.steam_uid=pt.steam_uid
				LEFT JOIN steam_user su ON pt.steam_uid = su.steam_uid
				WHERE
					pt.date_created >=#{day_anlyze_start}
				AND pt.date_created &lt;#{day_anlyze_stop}
				AND su.user_type in (1,3,6)
				AND su.is_active=1
				AND su.is_block =0
				AND pt.`status` in(1,2,3,10)
				and s.status=2 and s.shop_status=1
				GROUP BY pt.steam_uid 		
</select>

	<!-- 查询卖家的买家数量-->
<select id="queryAllSellerToBuyer" parameterType="pd" resultType="pd">
				SELECT count(DISTINCT buyer_steam_uid) as buyerCount,seller_steam_uid from 
				user_shop s left join `order` o on s.steam_uid=o.seller_steam_uid
				LEFT JOIN steam_user su ON o.seller_steam_uid = su.steam_uid
				WHERE
					o.date_modified >=#{day_anlyze_start}
				AND o.date_modified &lt;#{day_anlyze_stop}
				AND su.user_type in (1,3,6)
				AND su.is_active=1
				AND su.is_block =0
				AND o.`status` =1
				and s.status=2 and s.shop_status=1
				GROUP BY o.seller_steam_uid 		
</select>

<!--查询卖家的售出产品数量和售出产品总金额  -->
	<select id="queryAllSellerToSale" parameterType="pd" resultType="pd">
	  select count(1) as sale_num,sum(o.order_total) as sale_price,o.seller_steam_uid from  
	  user_shop s left join `order` o on s.steam_uid=o.seller_steam_uid
	  LEFT JOIN steam_user su ON o.seller_steam_uid = su.steam_uid
			WHERE o.date_modified >=#{day_anlyze_start}
				AND o.date_modified &lt;#{day_anlyze_stop}
				AND su.user_type in (1,3,6)
				AND su.is_active=1
				AND su.is_block =0
				AND o.`status` =1
				and s.status=2 and s.shop_status=1
				GROUP BY o.seller_steam_uid 		
	</select>
		
	
	<!-- 查询上周的排序值 -->
	<select id="queryAllSellerLastWeekSort" parameterType="pd" resultType="pd">
		select steam_uid as seller_steam_uid,sort_number from report19_sellerranking_form where create_time=(select max(create_time) from report19_sellerranking_form)
	</select>
	
	
	<!-- 查询上周排行 -->
	<select id="queryAllSellerLastWeekRanking" parameterType="pd" resultType="pd">
		SELECT
    	CONVERT((@row_number:=@row_number + 1),signed)AS num, steam_uid as seller_steam_uid
		FROM
    	report19_sellerRanking_form,(SELECT @row_number:=0) AS t
		where create_time=(select max(create_time) from report19_sellerranking_form)
		order by sort_number desc,last_week_ranking asc
	</select>
	
	<!-- 查询统计报表里的所有卖家数量 -->
	<select id="queryAllSellerCountFromReport" parameterType="pd" resultType="int">
		select count(DISTINCT steam_uid) from report19_sellerRanking_form
	</select>
	
	<!-- 查询卖家数量 -->
	<select id="queryAllSellerCountFromSteam" parameterType="pd" resultType="int">
		select count(steam_uid) from steam_user
	</select>
	<!-- 插入卖家排行榜统计表 -->
 <insert id="insertSellerRankingReportForm19" parameterType="java.util.List">
	INSERT into report19_sellerRanking_form(anlyze_data_start,anlyze_data_end,steam_uid,person_name,put_on_number,buyer_number,sale_num,sale_price,sort_number,create_time,last_week_ranking)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
				<if test="item.day_anlyze_start!=null">
					#{item.day_anlyze_start},
				</if>
				<if test="item.day_anlyze_start==null">
					0,
				</if>
				<if test="item.day_anlyze_stop!=null">
					#{item.day_anlyze_stop},
				</if>
				<if test="item.day_anlyze_stop==null">
					0,
				</if>
				<if test="item.steam_uid!=null">
					#{item.steam_uid},
				</if>
				<if test="item.steam_uid==null">
					0,,
				</if>
				
				
				<if test="item.name!=null">
					#{item.name},
				</if>
				<if test="item.name==null">
					0,
				</if>
				
				
				<if test="item.putOnNumber!=null">
					#{item.putOnNumber},
				</if>
				<if test="item.putOnNumber==null">
					0,
				</if>
				
				<if test="item.buyerNumber!=null">
					#{item.buyerNumber},
				</if>
				<if test="item.buyerNumber==null">
					0,
				</if>
				
				<if test="item.saleNumber!=null">
					#{item.saleNumber},
				</if>
				<if test="item.saleNumber==null">
					0,
				</if>
				
				<if test="item.salePrice!=null">
					#{item.salePrice},
				</if>
				<if test="item.salePrice==null">
					0,
				</if>
				
				<if test="item.sortNumber!=null">
					#{item.sortNumber},
				</if>
				<if test="item.sortNumber==null">
					0,
				</if>
				<if test="item.create_time!=null">
					#{item.create_time},
				</if>
				<if test="item.create_time==null">
					0,
				</if>
				<if test="item.lastRanking!=null">
					#{item.lastRanking}
				</if>
				<if test="item.lastRanking==null">
					0
				</if>
				)
            </foreach>
	</insert>
	
	<delete id="deleteReportFormTwenty" parameterType="pd">
		DELETE from report20_onebuy_form where DATE_FORMAT(anlyze_data,'%Y-%m-%d') = #{data_anliyze_time1}
	</delete>
	
<select id="queryReportFormTwenty" parameterType="pd" resultType="pd">
	select a.time,a.usercount,a.buycount,a.productcount,a.totalprice,IFNULL(b.returntotalprice,0) as returntotalprice,c.opentotalprice,c.openproductcount,c.averageprice,price from 
	(select DATE_FORMAT(o.date_created,'%Y-%m-%d') AS time, count(DISTINCT o.buyer_steam_uid) as usercount,count(o.order_number) as buycount,count(DISTINCT o.treasure_id) as productcount,sum(o.total_price) as totalprice from treasure_order o left join treasure_product p on o.treasure_id=p.id where o.`status` =1 and p.money_purchase!=0
	and  o.date_created >=#{day_anlyze_start} and o.date_created &lt;#{day_anlyze_stop} and o.seller_type=1
	group  by DATE_FORMAT(o.date_created,'%Y-%m-%d')) a
	left join 
	(select DATE_FORMAT(o.date_created,'%Y-%m-%d') AS time,ABS(sum(o.total_price)) as returntotalprice from treasure_order o left join treasure_product p on o.treasure_id=p.id where o.`status` =3 and p.money_purchase!=0
	and  o.date_created >=#{day_anlyze_start} and o.date_created &lt;#{day_anlyze_stop} and o.seller_type=1
	group  by DATE_FORMAT(o.date_created,'%Y-%m-%d') ) b on a.time=b.time
	left join 
	(select DATE_FORMAT(open_date,'%Y-%m-%d') AS time,sum(buy_total_num*unit_price) as opentotalprice,count(id) as openproductcount,round(((sum(buy_total_num*unit_price)-sum(total_price))/sum(buy_total_num*unit_price))*100,2) as averageprice,sum(buy_total_num*unit_price)-sum(total_price) as price from 
		(select open_date,buy_total_num,unit_price,id,total_price from treasure_product where STATUS=6 and treasure_type=2 and money_purchase!=0 and open_date >=#{day_anlyze_start} and open_date &lt;#{day_anlyze_stop} and seller_type=1
    union select a.open_date,a.buy_total_num,a.unit_price,a.id,p.purchase_price as total_price  from treasure_product a,product_trade p where a.trade_id=p.id and  a.STATUS=6 and a.treasure_type=1 and a.money_purchase!=0 and open_date >=#{day_anlyze_start} and open_date &lt;#{day_anlyze_stop} and a.seller_type=1) m  group  by DATE_FORMAT(open_date,'%Y-%m-%d')) c on a.time=c.time
	</select>
	
	<insert id="insertReportFormTwenty" parameterType="java.util.List">
	
		insert into report20_onebuy_form(anlyze_data,user_count,buy_count,product_count,total_price,return_price,open_price,open_count,open_average_rate,open_average_price,create_time) 
		values
			<foreach collection="list" item="item" index="index" separator="," >  
				(
			
				<if test="item.time!=null">
					#{item.time},
				</if>
				<if test="item.time==null">
					0,
				</if>
				
				
				<if test="item.usercount!=null">
					#{item.usercount},
				</if>
				<if test="item.usercount==null">
					0,
				</if>
				
				
				<if test="item.buycount!=null">
					#{item.buycount},
				</if>
				<if test="item.buycount==null">
					0,
				</if>
				
				<if test="item.productcount!=null">
					#{item.productcount},
				</if>
				<if test="item.productcount==null">
					0,
				</if>
				
				<if test="item.totalprice!=null">
					#{item.totalprice},
				</if>
				<if test="item.totalprice==null">
					0,
				</if>
				
				<if test="item.returntotalprice!=null">
					#{item.returntotalprice},
				</if>
				<if test="item.returntotalprice==null">
					0,
				</if>
				
				<if test="item.opentotalprice!=null">
					#{item.opentotalprice},
				</if>
				<if test="item.opentotalprice==null">
					0,
				</if>
				<if test="item.openproductcount!=null">
					#{item.openproductcount},
				</if>
				<if test="item.openproductcount==null">
					0,
				</if>
				<if test="item.averageprice!=null">
					#{item.averageprice},
				</if>
				<if test="item.averageprice==null">
					0,
				</if>
				<if test="item.price!=null">
					#{item.price},
				</if>
				<if test="item.price==null">
					0,
				</if>
					NOW()
				)
            </foreach>
	</insert>
	
	
	<!-- 查询商品总数与成本 -->
	<select id="totalList" parameterType="pd" resultType="pd">
	select count(id) as totalCount,"2" as treasure_type,CAST(IFNULL(SUM(total_price),0) AS DECIMAL(10,2)) as totalPrice from treasure_product where treasure_type=2 and money_purchase!=0 and date_created &lt;#{day_anlyze_stop} and seller_type=1
    union select count(a.id) as totalCount,"1" as treasure_type,CAST(IFNULL(SUM(p.purchase_price),0) AS DECIMAL(10,2)) as totalPrice  from treasure_product a,product_trade p where a.trade_id=p.id  and a.treasure_type=1 and a.money_purchase!=0 and a.date_created &lt;#{day_anlyze_stop} and a.seller_type=1
	</select>
	
	<!-- 查询上架的商品总数与成本 -->
	<select id="upProductList" parameterType="pd" resultType="pd">
    select count(id) as upCount,DATE_FORMAT(putaway_date,'%Y-%m-%d') as time,"2" as treasure_type,CAST(IFNULL(SUM(total_price),0) AS DECIMAL(10,2)) AS upPrice from treasure_product where treasure_type=2 and money_purchase!=0 and status not in (2,5) and putaway_date >=#{day_anlyze_start} and putaway_date &lt;#{day_anlyze_stop} and seller_type=1
    union select count(a.id) as upCount,DATE_FORMAT(a.putaway_date,'%Y-%m-%d') as time,"1" as treasure_type,CAST(IFNULL(SUM(p.purchase_price),0) AS DECIMAL(10,2)) AS upPrice  from treasure_product a,product_trade p where a.trade_id=p.id  and a.treasure_type=1 and a.money_purchase!=0 and a.status not in (2,5) and a.putaway_date >=#{day_anlyze_start} and a.putaway_date &lt;#{day_anlyze_stop} and a.seller_type=1
	</select>
	
	<!-- 查询已售出商品数量与金额 -->
	<select id="saleProductList" parameterType="pd" resultType="pd">
	select count(id) as saleCount,DATE_FORMAT(date_updated,'%Y-%m-%d') as time,"2" as treasure_type,CAST(IFNULL(SUM(buy_total_num*unit_price),0) AS DECIMAL(10,2)) AS salePrice from treasure_product where treasure_type=2 and money_purchase!=0 and status in (3,6) and date_updated >=#{day_anlyze_start} and date_updated &lt;#{day_anlyze_stop} and seller_type=1
    union select count(a.id) as saleCount,DATE_FORMAT(a.date_updated,'%Y-%m-%d') as time,"1" as treasure_type,CAST(IFNULL(SUM(a.buy_total_num*a.unit_price),0) AS DECIMAL(10,2)) AS salePrice  from treasure_product a,product_trade p where a.trade_id=p.id  and a.treasure_type=1 and a.money_purchase!=0 and a.status not in (3,6) and a.date_updated >=#{day_anlyze_start} and a.date_updated &lt;#{day_anlyze_stop} and a.seller_type=1
	</select>
	<!-- 查询已揭晓的商品数量与成本 -->
	<select id="openProductList" parameterType="pd" resultType="pd">
	select count(id) as openCount,DATE_FORMAT(open_date,'%Y-%m-%d') as time,"2" as treasure_type,CAST(IFNULL(SUM(total_price),0) AS DECIMAL(10,2)) AS openPrice from treasure_product where treasure_type=2 and money_purchase!=0 and status in (6) and open_date >=#{day_anlyze_start} and open_date &lt;#{day_anlyze_stop} and seller_type=1
    union select count(a.id) as openCount,DATE_FORMAT(a.open_date,'%Y-%m-%d') as time,"1" as treasure_type,CAST(IFNULL(SUM(p.purchase_price),0) AS DECIMAL(10,2)) AS openPrice  from treasure_product a,product_trade p where a.trade_id=p.id  and a.treasure_type=1 and a.money_purchase!=0 and a.status in (6) and a.open_date >=#{day_anlyze_start} and a.open_date &lt;#{day_anlyze_stop} and a.seller_type=1
	</select>
	<!-- 查询已兑换的商品与成本 -->
	<select id="exchangeProductList" parameterType="pd" resultType="pd">
	select count(a.id) as exchangeCount,DATE_FORMAT(o.date_updated,'%Y-%m-%d') as time,"2" as treasure_type,CAST(IFNULL(SUM(a.total_price),0) AS DECIMAL(10,2)) AS exchangePrice 
	from treasure_order o,treasure_product a where o.treasure_id=a.id and o.conversion_status=2 and a.treasure_type=2 and a.money_purchase!=0 and o.date_updated >=#{day_anlyze_start} and o.date_updated &lt;#{day_anlyze_stop} and a.seller_type=1
	union 
	select count(a.id) as exchangeCount,DATE_FORMAT(o.date_updated,'%Y-%m-%d') as time,"1" as treasure_type,CAST(IFNULL(SUM(p.purchase_price),0) AS DECIMAL(10,2)) AS exchangePrice 
	from treasure_order o,treasure_product a,product_trade p  where o.treasure_id=a.id and a.trade_id=p.id and o.conversion_status=2 and a.treasure_type=1 and a.money_purchase!=0 and o.date_updated >=#{day_anlyze_start} and o.date_updated &lt;#{day_anlyze_stop} and a.seller_type=1
	</select>
	<!-- 查询已废弃的商品与成本 -->
	 <select id="cancleProductList" parameterType="pd" resultType="pd">
	select count(id) as cancleCount,DATE_FORMAT(date_updated,'%Y-%m-%d') as time,"2" as treasure_type,CAST(IFNULL(SUM(total_price),0) AS DECIMAL(10,2)) AS canclePrice from treasure_product where treasure_type=2 and money_purchase!=0 and status=5 and date_updated >=#{day_anlyze_start} and date_updated &lt;#{day_anlyze_stop} and seller_type=1
    union select count(a.id) as cancleCount,DATE_FORMAT(a.date_updated,'%Y-%m-%d') as time,"1" as treasure_type,CAST(IFNULL(SUM(p.purchase_price),0) AS DECIMAL(10,2)) AS canclePrice  from treasure_product a,product_trade p where a.trade_id=p.id  and a.treasure_type=1 and money_purchase!=0 and a.status=5 and a.date_updated >=#{day_anlyze_start} and a.date_updated &lt;#{day_anlyze_stop} and a.seller_type=1
	</select> 
	
	<delete id="deleteReportFormTwentyOne" parameterType="pd">
		DELETE from report21_onebuy_form where DATE_FORMAT(anlyze_data,'%Y-%m-%d') = #{data_anliyze_time1}
	</delete>
	
	
	<insert id="insertReportFormTwentyOne" parameterType="java.util.List">
	
		insert into report21_onebuy_form(anlyze_data,code,name,total_count,total_price,up_count,up_price,sale_count,sale_price,open_count,open_price,exchange_count,exchange_price,create_time) 
		values
			<foreach collection="list" item="item" index="index" separator="," >  
				(
			
				<if test="item.anlyze_data!=null">
					#{item.anlyze_data},
				</if>
				<if test="item.anlyze_data==null">
					0,
				</if>
				
				
				<if test="item.code!=null">
					#{item.code},
				</if>
				<if test="item.code==null">
					0,
				</if>
				
				
				<if test="item.name!=null">
					#{item.name},
				</if>
				<if test="item.name==null">
					0,
				</if>
				
				<if test="item.total_count!=null">
					#{item.total_count},
				</if>
				<if test="item.total_count==null">
					0,
				</if>
				
				<if test="item.total_price!=null">
					#{item.total_price},
				</if>
				<if test="item.total_price==null">
					0,
				</if>
				
				<if test="item.up_count!=null">
					#{item.up_count},
				</if>
				<if test="item.up_count==null">
					0,
				</if>
				
				<if test="item.up_price!=null">
					#{item.up_price},
				</if>
				<if test="item.up_price==null">
					0,
				</if>
				<if test="item.sale_count!=null">
					#{item.sale_count},
				</if>
				<if test="item.sale_count==null">
					0,
				</if>
				<if test="item.sale_price!=null">
					#{item.sale_price},
				</if>
				<if test="item.sale_price==null">
					0,
				</if>
				<if test="item.open_count!=null">
					#{item.open_count},
				</if>
				<if test="item.open_count==null">
					0,
				</if>
				
				<if test="item.open_price!=null">
					#{item.open_price},
				</if>
				<if test="item.open_price==null">
					0,
				</if>
					
				<if test="item.exchange_count!=null">
					#{item.exchange_count},
				</if>
				<if test="item.exchange_count==null">
					0,
				</if>
				<if test="item.exchange_price!=null">
					#{item.exchange_price},
				</if>
				<if test="item.exchange_price==null">
					0,
				</if>
				<if test="item.create_time!=null">
					#{item.create_time}
				</if>
				<if test="item.create_time==null">
					0
				</if>
				)
            </foreach>
	</insert>
	
	<!-- 查询dota的最低售价，在售数量 -->
		<select id="getDota2Data" resultType="pd">
	     select min(t.unit_price) as price ,count(t.id) as count,p.id 
	     from product_trade t left join product p on t.product_id=p.id 
	     where t.status=2 and t.app_id=570 group by p.id
			union
		 select 0 as price,0 as count,p.id from 
		 product p where p.id not in
		 (select p.id from product_trade t left join product p on t.product_id=p.id where t.status=2 and t.app_id=570 group by p.id) 
		 and p.app_id=570
		</select>
		
	<!-- 更新产品表 -->
		<update id="updateDota2Data"  parameterType="pd">      
                 update product set 
                  min_price=#{price},
                  sale_count=#{count}
                  where id = ${id}    
    	</update>
    
    
    <!-- 查询c2c上架的商品总数与金额 -->
	<select id="newUpProductc2cList" parameterType="pd" resultType="pd">
    select count(a.id) as newUpCount,DATE_FORMAT(a.putaway_date,'%Y-%m-%d') as time,CAST(IFNULL(SUM(buy_total_num*unit_price),0) AS DECIMAL(10,2)) AS upPrice ,count(DISTINCT steam_uid) as upUserCount  from treasure_product a  where  a.status not in (2,5,8) and a.putaway_date >=#{day_anlyze_start} and a.putaway_date &lt;#{day_anlyze_stop} and a.seller_type=2
	</select>
	
	<!--查询c2c用户下注产品数  -->
	<select id="betProductc2cList" parameterType="pd" resultType="pd">
	select count(a.id) as betCount,DATE_FORMAT(a.date_updated,'%Y-%m-%d') as time from treasure_product a  where  a.status in (1,3,6,7) and a.date_updated >=#{day_anlyze_start} and a.date_updated &lt;#{day_anlyze_stop} and a.seller_type=2 and a.subscribe_num>0
	</select>
	<!-- 查询查c2c开奖产品数 -->
	<select id="openProductc2cList" parameterType="pd" resultType="pd">
	select count(a.id) as openCount,DATE_FORMAT(a.open_date,'%Y-%m-%d') as time from treasure_product a  where  a.status in (6,7) and a.open_date >=#{day_anlyze_start} and a.open_date &lt;#{day_anlyze_stop} and a.seller_type=2
	</select>
	<!-- 查询c2c夺宝终止产品数 -->
	<select id="cancleProductc2cList" parameterType="pd" resultType="pd">
	select count(a.id) as cancleCount,DATE_FORMAT(a.date_updated,'%Y-%m-%d') as time from treasure_product a  where  a.status in (4,5) and a.date_updated >=#{day_anlyze_start} and a.date_updated &lt;#{day_anlyze_stop} and a.seller_type=2
	</select>
	<!-- 查询查c2c在架产品数 -->
	<select id="upProductc2cList" parameterType="pd" resultType="pd">
	select count(a.id) as upCount,DATE_FORMAT(a.date_updated,'%Y-%m-%d') as time from treasure_product a  where  a.status =1 and a.date_updated &lt;#{day_anlyze_stop} and a.seller_type=2
	</select>
	<!-- 查询c2c下注产品用户数 -->
	<select id="betUserProductc2cList" parameterType="pd" resultType="pd">
	select count(DISTINCT a.buyer_steam_uid) as betUserCount,DATE_FORMAT(a.pay_date,'%Y-%m-%d') as time from treasure_order a where a.status =1 and a.pay_date >=#{day_anlyze_start} and a.pay_date &lt;#{day_anlyze_stop} and a.seller_type=2
	</select>
	<!-- 查询查c2c订单总数与金额 -->
	<select id="orderProductc2cList" parameterType="pd" resultType="pd">
	select count(a.id) as orderCount,DATE_FORMAT(a.pay_date,'%Y-%m-%d') as time,CAST(IFNULL(SUM(a.total_price),0) AS DECIMAL(10,2)) AS orderPrice from treasure_order a where a.status =1 and a.pay_date >=#{day_anlyze_start} and a.pay_date &lt;#{day_anlyze_stop} and a.seller_type=2
	</select>
	
	<!-- 查询查c2c退款总数与金额 -->
	<select id="returnOrderProductc2cList" parameterType="pd" resultType="pd">
	select count(a.id) as returnCount,DATE_FORMAT(a.date_updated,'%Y-%m-%d') as time,CAST(IFNULL(ABS(SUM(a.total_price)),0) AS DECIMAL(10,2)) AS returnPrice from treasure_order a where a.status =3 and a.date_updated >=#{day_anlyze_start} and a.date_updated &lt;#{day_anlyze_stop} and a.seller_type=2
	</select>
	<!-- 查询c2c管理费收入 -->
	<select id="managerProductc2cList" parameterType="pd" resultType="pd">
	 select CAST(IFNULL(SUM(a.amount),0) AS DECIMAL(10,2)) AS managerPrice,DATE_FORMAT(a.date_created,'%Y-%m-%d') as time from treasure_money_detail a where a.service_type=1 and a.date_created >=#{day_anlyze_start} and a.date_created &lt;#{day_anlyze_stop} 
	 </select>
	 
	 <!-- 删除以前数据 -->
	<delete id="deleteReportFormTwentyTwo" parameterType="pd">
		DELETE from report22_c2c_form where DATE_FORMAT(anlyze_data,'%Y-%m-%d') = #{data_anliyze_time1}
	</delete>
	
	<!-- 保存 -->
	<insert id="insertReportFormTwentyTwo" parameterType="java.util.List">
	
		insert into report22_c2c_form(anlyze_data,code,name,new_up_count,bet_count,open_count,cancle_count,up_count,up_user_count,bet_user_count,order_count,order_price,return_order_count,return_order_price,up_total_price,manager_price,create_time) 
		values
			<foreach collection="list" item="item" index="index" separator="," >  
				(
			
				<if test="item.anlyze_data!=null">
					#{item.anlyze_data},
				</if>
				<if test="item.anlyze_data==null">
					0,
				</if>
				
				
				<if test="item.code!=null">
					#{item.code},
				</if>
				<if test="item.code==null">
					0,
				</if>
				
				
				<if test="item.name!=null">
					#{item.name},
				</if>
				<if test="item.name==null">
					0,
				</if>
				
				<if test="item.new_up_count!=null">
					#{item.new_up_count},
				</if>
				<if test="item.new_up_count==null">
					0,
				</if>
				
				<if test="item.bet_count!=null">
					#{item.bet_count},
				</if>
				<if test="item.bet_count==null">
					0,
				</if>
				
				<if test="item.open_count!=null">
					#{item.open_count},
				</if>
				<if test="item.open_count==null">
					0,
				</if>
				
				<if test="item.cancle_count!=null">
					#{item.cancle_count},
				</if>
				<if test="item.cancle_count==null">
					0,
				</if>
				<if test="item.up_count!=null">
					#{item.up_count},
				</if>
				<if test="item.up_count==null">
					0,
				</if>
				<if test="item.up_user_count!=null">
					#{item.up_user_count},
				</if>
				<if test="item.up_user_count==null">
					0,
				</if>
				<if test="item.bet_user_count!=null">
					#{item.bet_user_count},
				</if>
				<if test="item.bet_user_count==null">
					0,
				</if>
				
				<if test="item.order_count!=null">
					#{item.order_count},
				</if>
				<if test="item.order_count==null">
					0,
				</if>
					
				<if test="item.order_price!=null">
					#{item.order_price},
				</if>
				<if test="item.order_price==null">
					0,
				</if>
				<if test="item.return_order_count!=null">
					#{item.return_order_count},
				</if>
				<if test="item.return_order_count==null">
					0,
				</if>
				
				<if test="item.return_order_price!=null">
					#{item.return_order_price},
				</if>
				<if test="item.return_order_price==null">
					0,
				</if>
				
				<if test="item.up_total_price!=null">
					#{item.up_total_price},
				</if>
				<if test="item.up_total_price==null">
					0,
				</if>
				
				<if test="item.manager_price!=null">
					#{item.manager_price},
				</if>
				<if test="item.manager_price==null">
					0,
				</if>
				
				<if test="item.create_time!=null">
					#{item.create_time}
				</if>
				<if test="item.create_time==null">
					0
				</if>
				)
            </foreach>
	</insert>
	
	
	<!-- 查询卖家报表总数 -->
	<select id="getALLSellerReportCount" resultType="int">
		select count(*) from report7_seller_day_form
	</select>
	
	<!-- 查询提现失败但优惠券成功的优惠券 -->
	<select id="getFailWithDrawCash" parameterType="pd" resultType="pd">
	  select v.id from withdraw_cash c,voucher v,voucher_type t where c.id=v.order_num and v.voucher_type_id=t.id and c.status=2 and v.status=4 and t.type =3
	  and c.updated >=#{lastMIn} and c.updated &lt;#{current}
	</select>
	
	<update id="returnVoucher" parameterType="pd">
	  update voucher set order_num = null,`status` = 2,use_time = null where `status` = 4  and id = #{id};  
	</update>
	
	<select id="queryReportFormOneNoSeller" parameterType="pd" resultType="pd">
		SELECT
			IFNULL(a.order_success_num,0)+IFNULL(n.order_success_num,0) as one,
			IFNULL(b.product_sale_num,0)+IFNULL(n.product_sale_num,0) as two,
			IFNULL(c.order_price_total,0)+IFNULL(n.order_price_total,0) as three,
			#{day_anlyze_stop} as four,
			#{day_anlyze_start} as five,
			IFNULL(d.adjustOrderNum,0) + IFNULL(n.adjust_order_num,0) as six,
			IFNULL(d.adjustOrderPrice,0) + IFNULL(n.adjust_order_price,0) as seven,
			IFNULL((a.order_success_num-IFNULL(adjustOrderNum,0)+IFNULL(n.effective_order_num,0)),0) as eight,
			IFNULL((c.order_price_total+IFNULL(adjustOrderPrice,0)+IFNULL(n.effective_order_price,0)),0) as nine,
			a.app_id as ten,
			CASE a.app_id
				WHEN 730 THEN
					'csgo'
				WHEN 570 THEN
					'dota2'
				WHEN 433850 THEN
					'h1z1:KotK'
				WHEN 295110 THEN
					'h1z1:js'	
				END AS eleven
		FROM
		
		(select DISTINCT app_id from product ) m 
		 left join 
			(
				SELECT
					count(1) AS order_success_num,
					seller_steam_uid,
					app_id
				FROM
					(
						SELECT
							COUNT(o.order_number),
							o.seller_steam_uid,
							o.app_id
						FROM
							`order` o
						WHERE
							o.`status` = 1
						AND o.payment_method not in(5,7)
						AND o.date_modified >= #{day_anlyze_start}
						AND o.date_modified &lt; #{day_anlyze_stop}
						GROUP BY
						
							o.order_number,o.app_id
					) x
				GROUP BY
					app_id
			) a on m.app_id=a.app_id
		LEFT JOIN (
			SELECT
				count(1) AS product_sale_num,
				o.app_id
				
			FROM
				`order` o
			WHERE
				o.`status` = 1
				AND o.payment_method not in(5,7)
			AND o.date_modified >= #{day_anlyze_start}
			AND o.date_modified &lt; #{day_anlyze_stop}
			GROUP BY
				o.app_id
		) b ON  m.app_id=b.app_id
		LEFT JOIN (
			SELECT
				sum(o.order_total) AS order_price_total,
				o.app_id
			FROM
				`order` o
			WHERE
				o.`status` = 1
			AND o.payment_method not in(5,7)
			AND o.date_modified >= #{day_anlyze_start}
			AND o.date_modified &lt; #{day_anlyze_stop}
			GROUP BY
				o.app_id
		) c ON m.app_id =c.app_id
		LEFT JOIN(
			SELECT
				o.app_id,
			SUM(
				CAST(
					o.actual_paid AS DECIMAL (10, 2)
				)
			) AS adjustOrderPrice,
			count(1) AS adjustOrderNum
		FROM
			`order` o
		WHERE
			o.`status` = 3
			AND o.payment_method not in(5,7)
			AND o.date_modified >= #{day_anlyze_start}
			AND o.date_modified &lt; #{day_anlyze_stop}
		GROUP BY
			o.app_id
		)d on m.app_id=d.app_id	
		left join (
			select 
			order_success_num,
			product_sale_num,
			order_price_total,
			adjust_order_num,
			adjust_order_price,
			effective_order_num,
			effective_order_price,
			game_type
			from report23_noseller_form
			where DATE_FORMAT(data_anliyze_time,'%Y-%m-%d')=#{currentDay}
		) n on m.app_id=n.game_type
	</select>
	
	
	<select id="deletereport23_noseller_form" parameterType="pd" resultType="pd">
		delete from report23_noseller_form where DATE_FORMAT(data_anliyze_time,'%Y-%m-%d')=#{currentDay}
	</select>
	
	<insert id="insertReportFormOneNoSeller" parameterType="java.util.List">
	INSERT into report23_noseller_form(order_success_num,product_sale_num,order_price_total,data_anliyze_time,create_time,adjust_order_num,adjust_order_price,effective_order_num,effective_order_price,game_type,game_name)
				VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
					<if test="item.one!=null">
					#{item.one},
				</if>
				<if test="item.one==null">
					0,
				</if>
				<if test="item.two!=null">
					#{item.two},
				</if>
				<if test="item.two==null">
					0,
				</if>
				<if test="item.three!=null">
					#{item.three},
				</if>
				<if test="item.three==null">
					0,
				</if>
				<if test="item.four!=null">
					#{item.four},
				</if>
				<if test="item.four==null">
					0,
				</if>
				<if test="item.five!=null">
					#{item.five},
				</if>
				<if test="item.five==null">
					0,
				</if>
				<if test="item.six!=null">
					#{item.six},
				</if>
				<if test="item.six==null">
					0,
				</if>
				<if test="item.seven!=null">
					#{item.seven},
				</if>
				<if test="item.seven==null">
					0,
				</if>
				<if test="item.eight!=null">
					#{item.eight},
				</if>
				<if test="item.eight==null">
					0,
				</if>
				<if test="item.nine!=null">
					#{item.nine},
				</if>
				<if test="item.nine==null">
					0,
				</if>
				<if test="item.ten!=null">
					#{item.ten},
				</if>
				<if test="item.ten==null">
					0,
				</if>
				<if test="item.eleven!=null">
					#{item.eleven}
				</if>
				<if test="item.eleven==null">
					0
				</if>
				)
            </foreach>
	</insert>
	
	
	<delete id="deleteReportFormTwentyFour" parameterType="pd">
		DELETE from report24_totalsell_form  where data_anlyz_time = #{day_anlyze_start}
	</delete>
	
	<select id="queryReportFormTwentyFour" parameterType="pd" resultType="pd">
	  	select m.app_id as game_type,a.upnum as in_num,b.downnum as out_num,c.salenum as sale_num,#{day_anlyze_start} as data_anlyz_time,NOW() as create_time from 
		(select app_id from product group by app_id) m left join 
	 	(select IFNULL(count(pt.id),0) as upnum,pt.app_id from product_trade pt,product p
			where  pt.product_id=p.id
			and pt.`status` in (1,2,3,7,8,10,60,61,62,63)
			and p.product_type_id !=-1
			and pt.date_created >= #{day_anlyze_start} and pt.date_created &lt; #{day_anlyze_stop} group by pt.app_id) a on m.app_id=a.app_id
			left join(select IFNULL(count(pt.id),0) as downnum,pt.app_id from product_trade pt where pt.last_updated>=#{day_anlyze_start} and pt.last_updated &lt; #{day_anlyze_stop} and status in (10,8,62) group by pt.app_id)	b on m.app_id=b.app_id
			left join (SELECT 
		pt1.app_id,
		IFNULL(COUNT(pt1.steam_uid),0) AS salenum
		FROM product_trade pt1
		WHERE pt1.`status`=10
		and pt1.last_updated >=#{day_anlyze_start}
		AND pt1.last_updated &lt;=#{day_anlyze_stop}
		GROUP BY pt1.app_id	) c on m.app_id=c.app_id	
	</select>
	
		<insert id="insertReportFormTwentyFour" parameterType="java.util.List">
		INSERT into report24_totalsell_form(data_anlyz_time,create_time,game_type,in_num,out_num,sale_num)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
			<if test="item.data_anlyz_time!=null">
					#{item.data_anlyz_time},
				</if>
				<if test="item.data_anlyz_time==null">
					'0',
				</if>
				<if test="item.create_time!=null">
					#{item.create_time},
				</if>
				<if test="item.create_time==null">
					'0',
				</if>
				<if test="item.game_type!=null">
					#{item.game_type},
				</if>
				<if test="item.game_type==null">
					'0',
				</if>
				<if test="item.in_num!=null">
					#{item.in_num},
				</if>
				<if test="item.in_num==null">
					'0',
				</if>
				<if test="item.out_num!=null">
					#{item.out_num},
				</if>
				<if test="item.out_num==null">
					0,
				</if>
				<if test="item.sale_num!=null">
					#{item.sale_num}
				</if>
				<if test="item.sale_num==null">
					0
				</if>
				)
            </foreach>
	</insert>	
	
	
	<delete id="deleteReportFormBoxSteamUid" parameterType="pd">
		DELETE from report25_boxsteam_form  where DATE_FORMAT(anlyze_data,'%Y-%m-%d') = #{data_anliyze_time1}
	</delete>
	
	<select id="queryReportForBoxSteamUid" parameterType="pd" resultType="pd">
		select sum(o.price) as price, sum(o.purchase_price) as purchase_price,sum(o.price-o.purchase_price) as pricerate,u.steam_uid,sum(o.buyback_price) as buyback_price,sum((case when flag=2 then o.purchase_price end)-o.buyback_price) as backrate,sum( (o.price-o.purchase_price)+ ifnull(((case when flag=2 then o.purchase_price end)-o.buyback_price),0)) as rate,DATE_FORMAT(o.created,'%Y-%m-%d') as anlyze_data
		from unpack_order o left join steam_user u on o.buyer_id = u.id
		where  o.`status`=1
		and o.created >=#{day_anlyze_start}
		and o.created &lt;=#{day_anlyze_stop}
		group by u.steam_uid,DATE_FORMAT(o.created,'%Y-%m-%d')
	</select>
	
	
	<select id="insertReportFormBoxSteamUid" parameterType="java.util.List">
	 	INSERT into report25_boxsteam_form(anlyze_data,steam_uid,price,purchase_price,pricerate,buyback_price,rate,buybackrate,create_time)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
				<if test="item.anlyze_data!=null">
					#{item.anlyze_data},
				</if>
				<if test="item.anlyze_data==null">
					0,
				</if>
				<if test="item.steam_uid!=null">
					#{item.steam_uid},
				</if>
				<if test="item.steam_uid==null">
					0,
				</if>
				<if test="item.price!=null">
					#{item.price},
				</if>
				<if test="item.price==null">
					0,
				</if>
				<if test="item.purchase_price!=null">
					#{item.purchase_price},
				</if>
				<if test="item.purchase_price==null">
					0,
				</if>
				<if test="item.pricerate!=null">
					#{item.pricerate},
				</if>
				<if test="item.pricerate==null">
					0,
				</if>
				<if test="item.buyback_price!=null">
					#{item.buyback_price},
				</if>
				<if test="item.buyback_price==null">
					0,
				</if>
				<if test="item.rate!=null">
					#{item.rate},
				</if>
				<if test="item.rate==null">
					0,
				</if>
				<if test="item.backrate!=null">
					#{item.backrate},
				</if>
				<if test="item.backrate==null">
					0,
				</if>
				 NOW()
				)
            </foreach>
		</select>
		
		
		
	<delete id="deleteReportFormBoxName" parameterType="pd">
		DELETE from report26_boxname_form  where DATE_FORMAT(anlyze_data,'%Y-%m-%d') = #{data_anliyze_time1}
	</delete>
	
	<select id="queryReportForBoxName" parameterType="pd" resultType="pd">
		select b.name,count(o.buyer_id) as count,sum(o.price) as price, sum(o.purchase_price) as purchase_price,sum(o.price-o.purchase_price) as pricerate,sum(o.buyback_price) as buyback_price,sum((case when flag=2 then o.purchase_price end)-o.buyback_price) as backrate,sum( (o.price-o.purchase_price)+ ifnull(((case when flag=2 then o.purchase_price end)-o.buyback_price),0)) as rate,DATE_FORMAT(o.created,'%Y-%m-%d') as anlyze_data
		from unpack_order o left join unpack_box b on o.box_id = b.id
		where  o.`status`=1
		and o.created >=#{day_anlyze_start}
		and o.created &lt;=#{day_anlyze_stop}
		group by b.name,DATE_FORMAT(o.created,'%Y-%m-%d')
	</select>
	
	
	<select id="insertReportFormBoxName" parameterType="java.util.List">
	 	INSERT into report26_boxname_form(anlyze_data,name,count,price,purchase_price,pricerate,buyback_price,rate,buybackrate,create_time)
					VALUES
			<foreach collection="list" item="item" index="index" separator="," >  
				(
				<if test="item.anlyze_data!=null">
					#{item.anlyze_data},
				</if>
				<if test="item.anlyze_data==null">
					0,
				</if>
				<if test="item.name!=null">
					#{item.name},
				</if>
				<if test="item.name==null">
					0,
				</if>
				<if test="item.count!=null">
					#{item.count},
				</if>
				<if test="item.count==null">
					0,
				</if>
				<if test="item.price!=null">
					#{item.price},
				</if>
				<if test="item.price==null">
					0,
				</if>
				<if test="item.purchase_price!=null">
					#{item.purchase_price},
				</if>
				<if test="item.purchase_price==null">
					0,
				</if>
				<if test="item.pricerate!=null">
					#{item.pricerate},
				</if>
				<if test="item.pricerate==null">
					0,
				</if>
				<if test="item.buyback_price!=null">
					#{item.buyback_price},
				</if>
				<if test="item.buyback_price==null">
					0,
				</if>
				<if test="item.rate!=null">
					#{item.rate},
				</if>
				<if test="item.rate==null">
					0,
				</if>
				<if test="item.backrate!=null">
					#{item.backrate},
				</if>
				<if test="item.backrate==null">
					0,
				</if>
				 NOW()
				)
            </foreach>
		</select>
		
</mapper>